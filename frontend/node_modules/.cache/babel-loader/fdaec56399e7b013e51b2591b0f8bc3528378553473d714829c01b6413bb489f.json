{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/UpdateNamePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Modal, Button, FormControl } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateNamePopup({\n  show,\n  onClose,\n  currentGroupName\n}) {\n  _s();\n  const [groupName, setGroupName] = useState(currentGroupName);\n  const handleSubmit = () => {\n    console.log(\"saving name...\");\n    handleClose();\n  };\n  const handleClose = () => {\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Edit Group Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: groupName,\n        onChange: e => setGroupName(e.target.value),\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: handleSubmit,\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: handleClose,\n        children: [\"Close\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateNamePopup, \"N7x70xtm1OhbpTI5wePaOpVCdg0=\");\n_c = UpdateNamePopup;\nexport default UpdateNamePopup;\nvar _c;\n$RefreshReg$(_c, \"UpdateNamePopup\");","map":{"version":3,"names":["React","useState","Modal","Button","FormControl","jsxDEV","_jsxDEV","UpdateNamePopup","show","onClose","currentGroupName","_s","groupName","setGroupName","handleSubmit","console","log","handleClose","onHide","children","Header","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","type","value","onChange","e","target","className","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/UpdateNamePopup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, FormControl } from \"react-bootstrap\";\n\nfunction UpdateNamePopup({ show, onClose, currentGroupName }) {\n    const [groupName, setGroupName] = useState(currentGroupName);\n\n    const handleSubmit = () => {\n        console.log(\"saving name...\");\n        handleClose();\n    };\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    return (\n        <Modal show={show} onHide={onClose}>\n            <Modal.Header>\n                <Modal.Title>Edit Group Name</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <input\n                    type=\"text\"\n                    value={groupName}\n                    onChange={(e) => setGroupName(e.target.value)}\n                    className=\"form-control\"\n                />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={handleSubmit}>\n                    Save Changes\n                </Button>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                    Close{\" \"}\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default UpdateNamePopup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7D,SAASC,eAAeA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC;AAAiB,CAAC,EAAE;EAAAC,EAAA;EAC1D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAACS,gBAAgB,CAAC;EAE5D,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACvBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;IAC7BC,WAAW,CAAC,CAAC;EACjB,CAAC;EAED,MAAMA,WAAW,GAAGA,CAAA,KAAM;IACtBR,OAAO,CAAC,CAAC;EACb,CAAC;EAED,oBACIH,OAAA,CAACJ,KAAK;IAACM,IAAI,EAAEA,IAAK;IAACU,MAAM,EAAET,OAAQ;IAAAU,QAAA,gBAC/Bb,OAAA,CAACJ,KAAK,CAACkB,MAAM;MAAAD,QAAA,eACTb,OAAA,CAACJ,KAAK,CAACmB,KAAK;QAAAF,QAAA,EAAC;MAAe;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACfnB,OAAA,CAACJ,KAAK,CAACwB,IAAI;MAAAP,QAAA,eACPb,OAAA;QACIqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEhB,SAAU;QACjBiB,QAAQ,EAAGC,CAAC,IAAKjB,YAAY,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QAC9CI,SAAS,EAAC;MAAc;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM,CAAC,eACbnB,OAAA,CAACJ,KAAK,CAAC+B,MAAM;MAAAd,QAAA,gBACTb,OAAA,CAACH,MAAM;QAAC+B,OAAO,EAAC,SAAS;QAACC,OAAO,EAAErB,YAAa;QAAAK,QAAA,EAAC;MAEjD;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACTnB,OAAA,CAACH,MAAM;QAAC+B,OAAO,EAAC,WAAW;QAACC,OAAO,EAAElB,WAAY;QAAAE,QAAA,GAAC,OACzC,EAAC,GAAG;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAEhB;AAACd,EAAA,CAnCQJ,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAqCxB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}