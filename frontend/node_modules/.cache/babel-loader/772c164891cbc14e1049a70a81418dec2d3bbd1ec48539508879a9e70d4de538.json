{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/ExpenseDetailPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Modal, Button, Row, Col, FormControl, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../../styles/screens/GroupsScreens.css\";\nimport AlertMessage from \"../AlertMessage\";\nimport { updateGroupExpense } from \"../../actions/groupActions\";\nimport { GROUP_EXPENSES_DETAILS_UPDATE_RESET } from \"../../constants/groupConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ExpenseDetailPopup({\n  show,\n  onClose,\n  expense,\n  handleExpenseUpdate\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertVariant, setAlertVariant] = useState(\"\");\n  const [updatedDescription, setUpdatedDescription] = useState(\"\");\n  const [updatedAmountPaid, setUpdatedAmountPaid] = useState(0);\n  const [userAmounts, setUserAmounts] = useState({});\n  const [isEvenlySplit, setIsEvenlySplit] = useState(expense.isEvenlySplit);\n  const groupExpenseDetailUpdate = useSelector(state => state.groupExpenseDetailUpdate);\n  const {\n    success: groupExpenseDetailUpdateSuccess\n  } = groupExpenseDetailUpdate;\n\n  // Function to handle changes in user amount inputs\n  const handleUserAmountChange = (userId, amount) => {\n    setUserAmounts(prevAmounts => ({\n      ...prevAmounts,\n      [userId]: amount\n    }));\n  };\n  const evenlySplitAmount = mostRecentUpdatedAmount => {\n    const numberOfUsers = Object.keys(userAmounts).length;\n    var perUserAmount;\n    if (mostRecentUpdatedAmount === 0) {\n      perUserAmount = 0;\n    } else {\n      perUserAmount = mostRecentUpdatedAmount / numberOfUsers;\n    }\n    const evenlySplitUserAmounts = {};\n    for (const userId in userAmounts) {\n      evenlySplitUserAmounts[userId] = perUserAmount;\n    }\n    setUserAmounts(evenlySplitUserAmounts);\n  };\n  const handleIsEvenlySplitChange = e => {\n    setIsEvenlySplit(e.target.checked);\n    if (e.target.checked) {\n      evenlySplitAmount(updatedAmountPaid);\n    }\n  };\n  const handleAmountPaidChange = e => {\n    const newValue = parseFloat(e.target.value);\n    var mostRecentAmount;\n    if (!isNaN(newValue)) {\n      setUpdatedAmountPaid(newValue);\n      mostRecentAmount = newValue;\n    } else {\n      setUpdatedAmountPaid(0); // You can set it to an empty string or some other default value.\n      mostRecentAmount = 0;\n    }\n    if (isEvenlySplit) {\n      evenlySplitAmount(mostRecentAmount);\n    }\n  };\n\n  // Function to submit the updated data\n  const handleSubmit = () => {\n    // Calculate the total amount from userAmounts\n    const totalAmount = Object.values(userAmounts).reduce((total, amount) => total + parseFloat(amount || 0), 0);\n\n    // Check if the total amount is not equal to the expense amount\n    if (parseFloat(totalAmount).toFixed(2) !== parseFloat(updatedAmountPaid).toFixed(2)) {\n      handleShowAlert(\"Expense distribution doesn't add up to expense amount\", \"danger\");\n    } else {\n      // Create an array of expense_details based on userAmounts\n      const expenseDetails = Object.keys(userAmounts).map(userId => ({\n        user: Number(userId),\n        amount_owed: parseFloat(parseFloat(userAmounts[userId]).toFixed(2))\n      }));\n\n      // Create the data object to be logged\n      const updatedData = {\n        description: updatedDescription,\n        amount: parseFloat(parseFloat(updatedAmountPaid).toFixed(2)),\n        expense_details: expenseDetails,\n        isEvenlySplit: isEvenlySplit\n      };\n      dispatch(updateGroupExpense(expense.group, expense.id, updatedData));\n      handleClose();\n    }\n  };\n  const handleClose = () => {\n    dispatch({\n      type: GROUP_EXPENSES_DETAILS_UPDATE_RESET\n    });\n    onClose();\n  };\n  const handleShowAlert = useCallback((message, variant) => {\n    setAlertMessage(message);\n    setAlertVariant(variant);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 3000);\n  }, []);\n  useEffect(() => {\n    if (groupExpenseDetailUpdateSuccess) {\n      // tells ExpenseList.js to update the list\n      handleExpenseUpdate();\n      handleShowAlert(\"Successfully updated expense\", \"success\");\n    } else if (groupExpenseDetailUpdateSuccess === false) {\n      handleShowAlert(\"Error occurred while trying to update success\", \"danger\");\n    }\n  }, [groupExpenseDetailUpdateSuccess, handleShowAlert, handleExpenseUpdate]);\n\n  // Initialize userAmounts when the expense prop changes\n  useEffect(() => {\n    if (expense) {\n      // Initialize userAmounts with the initial data\n      const initialUserAmounts = {};\n      expense.expense_details.forEach(detail => {\n        initialUserAmounts[detail.user.id] = detail.amount_owed;\n      });\n      setUserAmounts(initialUserAmounts);\n\n      // Initialize other state variables as needed\n      setUpdatedDescription(expense.description);\n      setUpdatedAmountPaid(expense.amount);\n      setIsEvenlySplit(expense.isEvenlySplit);\n    }\n  }, [expense]);\n  if (!expense) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"expense-detail-popout py-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"left-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Expense Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"d-flex align-items-center my-0 me-2\",\n                children: \"Payer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"p-0 m-0\",\n                children: expense.payer.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"my-0 me-2\",\n                children: \"Amount Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"number\",\n                value: updatedAmountPaid,\n                onChange: handleAmountPaidChange,\n                inputMode: \"numeric\",\n                pattern: \"[0-9]*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"d-flex align-items-center my-0 me-2\",\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"p-0 m-0\",\n                children: expense.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mb-2\",\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                as: \"textarea\",\n                rows: 4,\n                value: updatedDescription,\n                onChange: e => {\n                  setUpdatedDescription(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"right-col border-primary \",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Expense Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row align-items-center my-2\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                id: \"evenlySplitCheckbox\",\n                label: \"Evenly Split\",\n                checked: isEvenlySplit,\n                onChange: handleIsEvenlySplitChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${isEvenlySplit ? \"disabled\" : \"\"}`,\n              children: expense.expense_details.map(detail => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `detail d-flex flex-row align-items-center my-2`,\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: detail.user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 45\n                  }, this), \"'s\\xA0split\\xA0is\\xA0$\", /*#__PURE__*/_jsxDEV(FormControl, {\n                    type: \"number\",\n                    value: userAmounts[detail.user.id] || detail.amount_owed,\n                    onChange: e => handleUserAmountChange(detail.user.id, e.target.value),\n                    inputMode: \"numeric\",\n                    pattern: \"[0-9]*\",\n                    disabled: isEvenlySplit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 228,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this)\n              }, detail.user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: alertMessage,\n        variant: alertVariant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 13\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      message: alertMessage,\n      variant: alertVariant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 9\n  }, this);\n}\n_s(ExpenseDetailPopup, \"YtB4l6yLmd2FJ8qrR0ylR+uLMeg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ExpenseDetailPopup;\nexport default ExpenseDetailPopup;\nvar _c;\n$RefreshReg$(_c, \"ExpenseDetailPopup\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","Modal","Button","Row","Col","FormControl","Form","useDispatch","useSelector","AlertMessage","updateGroupExpense","GROUP_EXPENSES_DETAILS_UPDATE_RESET","jsxDEV","_jsxDEV","ExpenseDetailPopup","show","onClose","expense","handleExpenseUpdate","_s","dispatch","showAlert","setShowAlert","alertMessage","setAlertMessage","alertVariant","setAlertVariant","updatedDescription","setUpdatedDescription","updatedAmountPaid","setUpdatedAmountPaid","userAmounts","setUserAmounts","isEvenlySplit","setIsEvenlySplit","groupExpenseDetailUpdate","state","success","groupExpenseDetailUpdateSuccess","handleUserAmountChange","userId","amount","prevAmounts","evenlySplitAmount","mostRecentUpdatedAmount","numberOfUsers","Object","keys","length","perUserAmount","evenlySplitUserAmounts","handleIsEvenlySplitChange","e","target","checked","handleAmountPaidChange","newValue","parseFloat","value","mostRecentAmount","isNaN","handleSubmit","totalAmount","values","reduce","total","toFixed","handleShowAlert","expenseDetails","map","user","Number","amount_owed","updatedData","description","expense_details","group","id","handleClose","type","message","variant","setTimeout","initialUserAmounts","forEach","detail","children","onHide","centered","Body","className","fileName","_jsxFileName","lineNumber","columnNumber","payer","name","onChange","inputMode","pattern","date","as","rows","Check","label","disabled","Footer","onClick","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/ExpenseDetailPopup.js"],"sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { Modal, Button, Row, Col, FormControl, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"../../styles/screens/GroupsScreens.css\";\nimport AlertMessage from \"../AlertMessage\";\nimport { updateGroupExpense } from \"../../actions/groupActions\";\nimport { GROUP_EXPENSES_DETAILS_UPDATE_RESET } from \"../../constants/groupConstants\";\n\nfunction ExpenseDetailPopup({ show, onClose, expense, handleExpenseUpdate }) {\n    const dispatch = useDispatch();\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertVariant, setAlertVariant] = useState(\"\");\n    const [updatedDescription, setUpdatedDescription] = useState(\"\");\n    const [updatedAmountPaid, setUpdatedAmountPaid] = useState(0);\n    const [userAmounts, setUserAmounts] = useState({});\n    const [isEvenlySplit, setIsEvenlySplit] = useState(expense.isEvenlySplit);\n\n    const groupExpenseDetailUpdate = useSelector(\n        (state) => state.groupExpenseDetailUpdate\n    );\n    const { success: groupExpenseDetailUpdateSuccess } =\n        groupExpenseDetailUpdate;\n\n    // Function to handle changes in user amount inputs\n    const handleUserAmountChange = (userId, amount) => {\n        setUserAmounts((prevAmounts) => ({\n            ...prevAmounts,\n            [userId]: amount,\n        }));\n    };\n\n    const evenlySplitAmount = (mostRecentUpdatedAmount) => {\n        const numberOfUsers = Object.keys(userAmounts).length;\n        var perUserAmount;\n        if (mostRecentUpdatedAmount === 0) {\n            perUserAmount = 0;\n        } else {\n            perUserAmount = mostRecentUpdatedAmount / numberOfUsers;\n        }\n\n        const evenlySplitUserAmounts = {};\n\n        for (const userId in userAmounts) {\n            evenlySplitUserAmounts[userId] = perUserAmount;\n        }\n\n        setUserAmounts(evenlySplitUserAmounts);\n    };\n\n    const handleIsEvenlySplitChange = (e) => {\n        setIsEvenlySplit(e.target.checked);\n        if (e.target.checked) {\n            evenlySplitAmount(updatedAmountPaid);\n        }\n    };\n\n    const handleAmountPaidChange = (e) => {\n        const newValue = parseFloat(e.target.value);\n        var mostRecentAmount;\n        if (!isNaN(newValue)) {\n            setUpdatedAmountPaid(newValue);\n            mostRecentAmount = newValue;\n        } else {\n            setUpdatedAmountPaid(0); // You can set it to an empty string or some other default value.\n            mostRecentAmount = 0;\n        }\n\n        if (isEvenlySplit) {\n            evenlySplitAmount(mostRecentAmount);\n        }\n    };\n\n    // Function to submit the updated data\n    const handleSubmit = () => {\n        // Calculate the total amount from userAmounts\n        const totalAmount = Object.values(userAmounts).reduce(\n            (total, amount) => total + parseFloat(amount || 0),\n            0\n        );\n\n        // Check if the total amount is not equal to the expense amount\n        if (\n            parseFloat(totalAmount).toFixed(2) !==\n            parseFloat(updatedAmountPaid).toFixed(2)\n        ) {\n            handleShowAlert(\n                \"Expense distribution doesn't add up to expense amount\",\n                \"danger\"\n            );\n        } else {\n            // Create an array of expense_details based on userAmounts\n            const expenseDetails = Object.keys(userAmounts).map((userId) => ({\n                user: Number(userId),\n                amount_owed: parseFloat(\n                    parseFloat(userAmounts[userId]).toFixed(2)\n                ),\n            }));\n\n            // Create the data object to be logged\n            const updatedData = {\n                description: updatedDescription,\n                amount: parseFloat(parseFloat(updatedAmountPaid).toFixed(2)),\n                expense_details: expenseDetails,\n                isEvenlySplit: isEvenlySplit,\n            };\n\n            dispatch(\n                updateGroupExpense(expense.group, expense.id, updatedData)\n            );\n            handleClose();\n        }\n    };\n\n    const handleClose = () => {\n        dispatch({ type: GROUP_EXPENSES_DETAILS_UPDATE_RESET });\n        onClose();\n    };\n\n    const handleShowAlert = useCallback((message, variant) => {\n        setAlertMessage(message);\n        setAlertVariant(variant);\n        setShowAlert(true);\n        setTimeout(() => {\n            setShowAlert(false);\n        }, 3000);\n    }, []);\n\n    useEffect(() => {\n        if (groupExpenseDetailUpdateSuccess) {\n            // tells ExpenseList.js to update the list\n            handleExpenseUpdate();\n            handleShowAlert(\"Successfully updated expense\", \"success\");\n        } else if (groupExpenseDetailUpdateSuccess === false) {\n            handleShowAlert(\n                \"Error occurred while trying to update success\",\n                \"danger\"\n            );\n        }\n    }, [groupExpenseDetailUpdateSuccess, handleShowAlert, handleExpenseUpdate]);\n\n    // Initialize userAmounts when the expense prop changes\n    useEffect(() => {\n        if (expense) {\n            // Initialize userAmounts with the initial data\n            const initialUserAmounts = {};\n            expense.expense_details.forEach((detail) => {\n                initialUserAmounts[detail.user.id] = detail.amount_owed;\n            });\n            setUserAmounts(initialUserAmounts);\n\n            // Initialize other state variables as needed\n            setUpdatedDescription(expense.description);\n            setUpdatedAmountPaid(expense.amount);\n            setIsEvenlySplit(expense.isEvenlySplit);\n        }\n    }, [expense]);\n\n    if (!expense) {\n        return null;\n    }\n\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose} centered>\n                <Modal.Body>\n                    <Row className=\"expense-detail-popout py-3\">\n                        <Col className=\"left-col\">\n                            <h5>Expense Details</h5>\n                            <div className=\"d-flex flex-row\">\n                                <h6 className=\"d-flex align-items-center my-0 me-2\">\n                                    Payer:\n                                </h6>\n\n                                <p className=\"p-0 m-0\">{expense.payer.name}</p>\n                            </div>\n                            <div className=\"d-flex flex-row\">\n                                <h6 className=\"my-0 me-2\">Amount Paid</h6>\n                                <FormControl\n                                    type=\"number\"\n                                    value={updatedAmountPaid}\n                                    onChange={handleAmountPaidChange}\n                                    inputMode=\"numeric\"\n                                    pattern=\"[0-9]*\"\n                                />\n                            </div>\n                            <div className=\"d-flex flex-row\">\n                                <h6 className=\"d-flex align-items-center my-0 me-2\">\n                                    Date:\n                                </h6>\n\n                                <p className=\"p-0 m-0\">{expense.date}</p>\n                            </div>\n                            <div className=\"d-flex flex-column\">\n                                <h6 className=\"mb-2\">Description:</h6>\n                                <FormControl\n                                    as=\"textarea\"\n                                    rows={4}\n                                    value={updatedDescription}\n                                    onChange={(e) => {\n                                        setUpdatedDescription(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </Col>\n                        <Col className=\"right-col border-primary \">\n                            <h5>Expense Distribution</h5>\n                            <div className=\"d-flex flex-row align-items-center my-2\">\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id=\"evenlySplitCheckbox\"\n                                    label=\"Evenly Split\"\n                                    checked={isEvenlySplit}\n                                    onChange={handleIsEvenlySplitChange}\n                                />\n                            </div>\n                            <div\n                                className={`${isEvenlySplit ? \"disabled\" : \"\"}`}\n                            >\n                                {expense.expense_details.map((detail) => (\n                                    <div key={detail.user.id}>\n                                        <div\n                                            className={`detail d-flex flex-row align-items-center my-2`}\n                                        >\n                                            <strong>{detail.user.name}</strong>\n                                            's&nbsp;split&nbsp;is&nbsp;$\n                                            <FormControl\n                                                type=\"number\"\n                                                value={\n                                                    userAmounts[\n                                                        detail.user.id\n                                                    ] || detail.amount_owed\n                                                }\n                                                onChange={(e) =>\n                                                    handleUserAmountChange(\n                                                        detail.user.id,\n                                                        e.target.value\n                                                    )\n                                                }\n                                                inputMode=\"numeric\"\n                                                pattern=\"[0-9]*\"\n                                                disabled={isEvenlySplit}\n                                            />\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save Changes\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n                {showAlert && (\n                    <AlertMessage\n                        message={alertMessage}\n                        variant={alertVariant}\n                    />\n                )}\n            </Modal>\n            {showAlert && (\n                <AlertMessage message={alertMessage} variant={alertVariant} />\n            )}\n        </div>\n    );\n}\n\nexport default ExpenseDetailPopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}