{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/DashboardScreenComponents/GroupSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"../../styles/screens/DashboardScreen.css\";\nimport Message from \"../Message\";\nimport { getUsersGroupsTotalCreditDebit } from \"../../actions/userActions\";\n\n/**\n * I could have created APIs that give me the data I want (group total credit and group\n * total debt) similar to DashboardScreenComponents/FriendsSummary.js, and simply just call\n * thos APIs and use the data using actions and reducers. However, I wanted to try out having\n * not ideal data and requiring formatting. This is why in this component I used existing\n * actions and reducers and formatted it to fit the structure I desired.\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GroupSummary() {\n  _s();\n  const dispatch = useDispatch();\n  const collapseSize = 4;\n  const [userDebtList, setUserDebtList] = useState([]);\n  const [userCreditList, setUserCreditList] = useState([]);\n  const [showAll, setShowAll] = useState(false);\n  const usersGroupsTotalDebtCredit = useSelector(state => state.usersGroupsTotalDebtCredit);\n  const {\n    error: userGroupsTotalCreditDebitError,\n    loading: userGroupsTotalCreditDebitLoading,\n    userGroupsTotalCreditDebit\n  } = usersGroupsTotalDebtCredit;\n  const handleShowMore = () => {\n    setShowAll(!showAll);\n  };\n  useEffect(() => {\n    if (userGroupsTotalCreditDebit) {\n      const updatedUserDebtList = [];\n      const updatedUserCreditList = [];\n      for (const groupId in userGroupsTotalCreditDebit) {\n        const groupData = userGroupsTotalCreditDebit[groupId];\n        const {\n          group_name,\n          total_credit,\n          total_debt\n        } = groupData;\n        // Create unique keys based on groupId and data type\n        const creditKey = `${groupId}_credit`;\n        const debtKey = `${groupId}_debt`;\n\n        // Check if total_credit exists and add it to the list\n        if (total_credit !== null) {\n          updatedUserCreditList.push({\n            groupId: groupId,\n            groupName: group_name,\n            totalCredit: total_credit,\n            key: creditKey\n          });\n        }\n\n        // Check if total_debt exists and add it to the list\n        if (total_debt !== null) {\n          updatedUserDebtList.push({\n            groupId: groupId,\n            groupName: group_name,\n            totalDebt: total_debt,\n            key: debtKey\n          });\n        }\n      }\n\n      // Update the state with the new arrays\n      setUserCreditList(updatedUserCreditList);\n      setUserDebtList(updatedUserDebtList);\n    }\n  }, [userGroupsTotalCreditDebit]);\n  useEffect(() => {\n    dispatch(getUsersGroupsTotalCreditDebit());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Groups Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"dashboard-section-box-container\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"dashboard-section-box-container-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Groups you owe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-box\",\n          children: userGroupsTotalCreditDebitLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this) : userGroupsTotalCreditDebitError ? /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: userGroupsTotalCreditDebitError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this) : userDebtList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"You don't owe any group money\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-0\",\n            children: userDebtList.slice(0, showAll ? userDebtList.length : collapseSize).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-box-item d-flex flex-row justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: group.groupName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-secondary\",\n                children: [\"$\", group.totalCredit]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 45\n              }, this)]\n            }, group.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        className: \"dashboard-section-box-container-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"Groups owe to you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"summary-box\",\n          children: userGroupsTotalCreditDebitLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this) : userGroupsTotalCreditDebitError ? /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"danger\",\n            children: userGroupsTotalCreditDebitError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this) : userCreditList.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"No group owes you\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"m-0\",\n            children: userCreditList.slice(0, showAll ? userCreditList.length : collapseSize).map(group => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"summary-box-item d-flex flex-row justify-content-between\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: group.groupName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-primary\",\n                children: [\"$\", group.totalCredit]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 45\n              }, this)]\n            }, group.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), (userDebtList.length > collapseSize || userCreditList.length > collapseSize) && /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleShowMore(),\n        className: \"show-more-button mt-4\",\n        children: showAll ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Show less\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angles-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Show all\", \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-angles-down\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n_s(GroupSummary, \"OOz/0Pc4PGmx4ctTFDQi0HfoWnQ=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = GroupSummary;\nexport default GroupSummary;\nvar _c;\n$RefreshReg$(_c, \"GroupSummary\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Row","Col","Message","getUsersGroupsTotalCreditDebit","jsxDEV","_jsxDEV","GroupSummary","_s","dispatch","collapseSize","userDebtList","setUserDebtList","userCreditList","setUserCreditList","showAll","setShowAll","usersGroupsTotalDebtCredit","state","error","userGroupsTotalCreditDebitError","loading","userGroupsTotalCreditDebitLoading","userGroupsTotalCreditDebit","handleShowMore","updatedUserDebtList","updatedUserCreditList","groupId","groupData","group_name","total_credit","total_debt","creditKey","debtKey","push","groupName","totalCredit","key","totalDebt","className","children","fileName","_jsxFileName","lineNumber","columnNumber","md","variant","length","slice","map","group","onClick","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/DashboardScreenComponents/GroupSummary.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport \"../../styles/screens/DashboardScreen.css\";\nimport Message from \"../Message\";\nimport { getUsersGroupsTotalCreditDebit } from \"../../actions/userActions\";\n\n/**\n * I could have created APIs that give me the data I want (group total credit and group\n * total debt) similar to DashboardScreenComponents/FriendsSummary.js, and simply just call\n * thos APIs and use the data using actions and reducers. However, I wanted to try out having\n * not ideal data and requiring formatting. This is why in this component I used existing\n * actions and reducers and formatted it to fit the structure I desired.\n *\n */\nfunction GroupSummary() {\n    const dispatch = useDispatch();\n    const collapseSize = 4;\n    const [userDebtList, setUserDebtList] = useState([]);\n    const [userCreditList, setUserCreditList] = useState([]);\n    const [showAll, setShowAll] = useState(false);\n\n    const usersGroupsTotalDebtCredit = useSelector(\n        (state) => state.usersGroupsTotalDebtCredit\n    );\n    const {\n        error: userGroupsTotalCreditDebitError,\n        loading: userGroupsTotalCreditDebitLoading,\n        userGroupsTotalCreditDebit,\n    } = usersGroupsTotalDebtCredit;\n\n    const handleShowMore = () => {\n        setShowAll(!showAll);\n    };\n\n    useEffect(() => {\n        if (userGroupsTotalCreditDebit) {\n            const updatedUserDebtList = [];\n            const updatedUserCreditList = [];\n\n            for (const groupId in userGroupsTotalCreditDebit) {\n                const groupData = userGroupsTotalCreditDebit[groupId];\n                const { group_name, total_credit, total_debt } = groupData;\n                // Create unique keys based on groupId and data type\n                const creditKey = `${groupId}_credit`;\n                const debtKey = `${groupId}_debt`;\n\n                // Check if total_credit exists and add it to the list\n                if (total_credit !== null) {\n                    updatedUserCreditList.push({\n                        groupId: groupId,\n                        groupName: group_name,\n                        totalCredit: total_credit,\n                        key: creditKey,\n                    });\n                }\n\n                // Check if total_debt exists and add it to the list\n                if (total_debt !== null) {\n                    updatedUserDebtList.push({\n                        groupId: groupId,\n                        groupName: group_name,\n                        totalDebt: total_debt,\n                        key: debtKey,\n                    });\n                }\n            }\n\n            // Update the state with the new arrays\n            setUserCreditList(updatedUserCreditList);\n            setUserDebtList(updatedUserDebtList);\n        }\n    }, [userGroupsTotalCreditDebit]);\n\n    useEffect(() => {\n        dispatch(getUsersGroupsTotalCreditDebit());\n    }, [dispatch]);\n\n    return (\n        <div className=\"dashboard-section-container\">\n            <h4>Groups Summary</h4>\n            <Row className=\"dashboard-section-box-container\">\n                <Col md={6} className=\"dashboard-section-box-container-col\">\n                    <div>\n                        <h6>Groups you owe</h6>\n                    </div>\n                    <div className=\"summary-box\">\n                        {userGroupsTotalCreditDebitLoading ? (\n                            <div>Loading...</div>\n                        ) : userGroupsTotalCreditDebitError ? (\n                            <Message variant=\"danger\">\n                                {userGroupsTotalCreditDebitError}\n                            </Message>\n                        ) : userDebtList.length === 0 ? (\n                            <div>You don't owe any group money</div>\n                        ) : (\n                            <div className=\"m-0\">\n                                {userDebtList\n                                    .slice(\n                                        0,\n                                        showAll\n                                            ? userDebtList.length\n                                            : collapseSize\n                                    )\n                                    .map((group) => (\n                                        <div\n                                            key={group.key}\n                                            className=\"summary-box-item d-flex flex-row justify-content-between\"\n                                        >\n                                            <div>{group.groupName}</div>\n                                            <div className=\"text-secondary\">\n                                                ${group.totalCredit}\n                                            </div>\n                                        </div>\n                                    ))}\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col md={6} className=\"dashboard-section-box-container-col\">\n                    <div>\n                        <h6>Groups owe to you</h6>\n                    </div>\n                    <div className=\"summary-box\">\n                        {userGroupsTotalCreditDebitLoading ? (\n                            <div>Loading...</div>\n                        ) : userGroupsTotalCreditDebitError ? (\n                            <Message variant=\"danger\">\n                                {userGroupsTotalCreditDebitError}\n                            </Message>\n                        ) : userCreditList.length === 0 ? (\n                            <div>No group owes you</div>\n                        ) : (\n                            <div className=\"m-0\">\n                                {userCreditList\n                                    .slice(\n                                        0,\n                                        showAll\n                                            ? userCreditList.length\n                                            : collapseSize\n                                    )\n                                    .map((group) => (\n                                        <div\n                                            key={group.key}\n                                            className=\"summary-box-item d-flex flex-row justify-content-between\"\n                                        >\n                                            <div>{group.groupName}</div>\n                                            <div className=\"text-primary\">\n                                                ${group.totalCredit}\n                                            </div>\n                                        </div>\n                                    ))}\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                {(userDebtList.length > collapseSize ||\n                    userCreditList.length > collapseSize) && (\n                    <div\n                        onClick={() => handleShowMore()}\n                        className=\"show-more-button mt-4\"\n                    >\n                        {showAll ? (\n                            <div>\n                                Show less{\" \"}\n                                <i className=\"fa-solid fa-angles-up\"></i>\n                            </div>\n                        ) : (\n                            <div>\n                                Show all{\" \"}\n                                <i className=\"fa-solid fa-angles-down\"></i>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </Row>\n        </div>\n    );\n}\n\nexport default GroupSummary;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}