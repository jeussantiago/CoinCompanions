{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/CreateExpensePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Modal, Button, Row, Col, FormControl, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../../styles/screens/GroupsScreens.css\";\nimport AlertMessage from \"../AlertMessage\";\n// import { createGroupExpense } from \"../../actions/groupActions\";\n// import { GROUP_EXPENSES_DETAILS_CREATE_RESET } from \"../../constants/groupConstants\";\n\n// const userData = [\n//     {\n//         id: 1,\n//         username: \"jeus@email.com\",\n//         email: \"jeus@email.com\",\n//         name: \"Jeus\",\n//     },\n//     {\n//         id: 3,\n//         username: \"tim@email.com\",\n//         email: \"tim@email.com\",\n//         name: \"tim\",\n//     },\n//     {\n//         id: 9,\n//         username: \"bob@email.com\",\n//         email: \"bob@email.com\",\n//         name: \"bob\",\n//     },\n//     {\n//         id: 10,\n//         username: \"charlie@email.com\",\n//         email: \"charlie@email.com\",\n//         name: \"charlie\",\n//     },\n//     {\n//         id: 11,\n//         username: \"david@email.com\",\n//         email: \"david@email.com\",\n//         name: \"david\",\n//     },\n//     {\n//         id: 12,\n//         username: \"ema@email.com\",\n//         email: \"ema@email.com\",\n//         name: \"ema\",\n//     },\n// ];\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateExpensePopup({\n  show,\n  onClose,\n  handleExpenseUpdate,\n  groupDetails\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertVariant, setAlertVariant] = useState(\"\");\n  const [updatedDescription, setUpdatedDescription] = useState(\"\");\n  const [updatedAmountPaid, setUpdatedAmountPaid] = useState(0);\n  const [userAmounts, setUserAmounts] = useState({});\n  const [isEvenlySplit, setIsEvenlySplit] = useState(false);\n  const userData = groupDetails.members;\n  // console.log(groupDetails);\n  // const groupDetails = useSelector((state) => state.groupDetails);\n  // const {\n  //     error: groupDetailsError,\n  //     loading: groupDetailsLoading,\n  //     groupDetail,\n  // } = groupDetails;\n\n  // const groupExpenseDetailUpdate = useSelector(\n  //     (state) => state.groupExpenseDetailUpdate\n  // );\n  // const { success: groupExpenseDetailUpdateSuccess } =\n  //     groupExpenseDetailUpdate;\n\n  // Function to handle changes in user amount inputs\n  const handleUserAmountChange = (userId, amount) => {\n    setUserAmounts(prevAmounts => ({\n      ...prevAmounts,\n      [userId]: amount\n    }));\n  };\n  const evenlySplitAmount = mostRecentUpdatedAmount => {\n    const numberOfUsers = Object.keys(userAmounts).length;\n    var perUserAmount;\n    if (mostRecentUpdatedAmount === 0) {\n      perUserAmount = 0;\n    } else {\n      perUserAmount = mostRecentUpdatedAmount / numberOfUsers;\n    }\n    const evenlySplitUserAmounts = {};\n    for (const userId in userAmounts) {\n      evenlySplitUserAmounts[userId] = perUserAmount;\n    }\n    setUserAmounts(evenlySplitUserAmounts);\n  };\n  const handleIsEvenlySplitChange = e => {\n    setIsEvenlySplit(e.target.checked);\n    if (e.target.checked) {\n      evenlySplitAmount(updatedAmountPaid);\n    }\n  };\n  const handleAmountPaidChange = e => {\n    const newValue = parseFloat(e.target.value);\n    var mostRecentAmount;\n    if (!isNaN(newValue)) {\n      setUpdatedAmountPaid(newValue);\n      mostRecentAmount = newValue;\n    } else {\n      setUpdatedAmountPaid(0);\n      mostRecentAmount = 0;\n    }\n    if (isEvenlySplit) {\n      evenlySplitAmount(mostRecentAmount);\n    }\n  };\n  const handleSubmit = () => {\n    // Calculate the total amount from userAmounts\n    const totalAmount = Object.values(userAmounts).reduce((total, amount) => total + parseFloat(amount || 0), 0);\n\n    // Check if the total amount is not equal to the expense amount\n    if (parseFloat(totalAmount).toFixed(2) !== parseFloat(updatedAmountPaid).toFixed(2)) {\n      handleShowAlert(\"Expense distribution doesn't add up to expense amount\", \"danger\");\n    } else {\n      // Create an array of expense_details based on userAmounts\n      const expenseDetails = Object.keys(userAmounts).map(userId => ({\n        user: Number(userId),\n        amount_owed: parseFloat(parseFloat(userAmounts[userId]).toFixed(2))\n      }));\n\n      // Create the data object to be logged\n      const updatedData = {\n        description: updatedDescription,\n        amount: parseFloat(parseFloat(updatedAmountPaid).toFixed(2)),\n        expense_details: expenseDetails,\n        isEvenlySplit: isEvenlySplit\n      };\n\n      // dispatch(\n      //     updateGroupExpense(expense.group, expense.id, updatedData)\n      // );\n      console.log(updatedData);\n      handleClose();\n    }\n  };\n  const handleClose = () => {\n    // dispatch({ type: GROUP_EXPENSES_DETAILS_CREATE_RESET });\n    onClose();\n  };\n  const handleShowAlert = useCallback((message, variant) => {\n    setAlertMessage(message);\n    setAlertVariant(variant);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 3000);\n  }, []);\n\n  // useEffect(() => {\n  //     if (groupExpenseDetailUpdateSuccess) {\n  //         // tells ExpenseList.js to update the list\n  //         handleExpenseUpdate();\n  //         handleShowAlert(\"Successfully updated expense\", \"success\");\n  //     } else if (groupExpenseDetailUpdateSuccess === false) {\n  //         handleShowAlert(\n  //             \"Error occurred while trying to update success\",\n  //             \"danger\"\n  //         );\n  //     }\n  // }, [groupExpenseDetailUpdateSuccess, handleShowAlert, handleExpenseUpdate]);\n\n  useEffect(() => {\n    // Initialize userAmounts with initial data from userData\n    const initialUserAmounts = {};\n    userData.forEach(user => {\n      initialUserAmounts[user.id] = 0;\n    });\n    setUserAmounts(initialUserAmounts);\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"expense-detail-popout py-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"left-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Expense Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row my-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"my-0 me-2\",\n                children: \"Amount Paid:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"number\",\n                value: updatedAmountPaid,\n                onChange: handleAmountPaidChange,\n                inputMode: \"numeric\",\n                pattern: \"[0-9]*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column my-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"my-2\",\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                as: \"textarea\",\n                rows: 4,\n                value: updatedDescription,\n                onChange: e => {\n                  setUpdatedDescription(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"right-col border-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Expense Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${isEvenlySplit ? \"disabled\" : \"\"}`,\n              children: userData.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `detail d-flex flex-row align-items-center my-2`,\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 45\n                  }, this), \"'s\\xA0split\\xA0is\\xA0$\", /*#__PURE__*/_jsxDEV(FormControl, {\n                    type: \"number\",\n                    value: userAmounts[user.id],\n                    onChange: e => handleUserAmountChange(user.id, e.target.value),\n                    inputMode: \"numeric\",\n                    pattern: \"[0-9]*\",\n                    disabled: isEvenlySplit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, this)\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row align-items-center my-2\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                id: \"evenlySplitCheckbox\",\n                label: \"Evenly Split\",\n                checked: isEvenlySplit,\n                onChange: handleIsEvenlySplitChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: alertMessage,\n        variant: alertVariant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      message: alertMessage,\n      variant: alertVariant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateExpensePopup, \"39CQAgRKsEgr8yLJX6+dUQ/EUOE=\", false, function () {\n  return [useDispatch];\n});\n_c = CreateExpensePopup;\nexport default CreateExpensePopup;\nvar _c;\n$RefreshReg$(_c, \"CreateExpensePopup\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Modal","Button","Row","Col","FormControl","Form","useDispatch","useSelector","AlertMessage","jsxDEV","_jsxDEV","CreateExpensePopup","show","onClose","handleExpenseUpdate","groupDetails","_s","dispatch","showAlert","setShowAlert","alertMessage","setAlertMessage","alertVariant","setAlertVariant","updatedDescription","setUpdatedDescription","updatedAmountPaid","setUpdatedAmountPaid","userAmounts","setUserAmounts","isEvenlySplit","setIsEvenlySplit","userData","members","handleUserAmountChange","userId","amount","prevAmounts","evenlySplitAmount","mostRecentUpdatedAmount","numberOfUsers","Object","keys","length","perUserAmount","evenlySplitUserAmounts","handleIsEvenlySplitChange","e","target","checked","handleAmountPaidChange","newValue","parseFloat","value","mostRecentAmount","isNaN","handleSubmit","totalAmount","values","reduce","total","toFixed","handleShowAlert","expenseDetails","map","user","Number","amount_owed","updatedData","description","expense_details","console","log","handleClose","message","variant","setTimeout","initialUserAmounts","forEach","id","children","onHide","centered","Body","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","inputMode","pattern","as","rows","name","disabled","Check","label","Footer","onClick","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/CreateExpensePopup.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Modal, Button, Row, Col, FormControl, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"../../styles/screens/GroupsScreens.css\";\nimport AlertMessage from \"../AlertMessage\";\n// import { createGroupExpense } from \"../../actions/groupActions\";\n// import { GROUP_EXPENSES_DETAILS_CREATE_RESET } from \"../../constants/groupConstants\";\n\n// const userData = [\n//     {\n//         id: 1,\n//         username: \"jeus@email.com\",\n//         email: \"jeus@email.com\",\n//         name: \"Jeus\",\n//     },\n//     {\n//         id: 3,\n//         username: \"tim@email.com\",\n//         email: \"tim@email.com\",\n//         name: \"tim\",\n//     },\n//     {\n//         id: 9,\n//         username: \"bob@email.com\",\n//         email: \"bob@email.com\",\n//         name: \"bob\",\n//     },\n//     {\n//         id: 10,\n//         username: \"charlie@email.com\",\n//         email: \"charlie@email.com\",\n//         name: \"charlie\",\n//     },\n//     {\n//         id: 11,\n//         username: \"david@email.com\",\n//         email: \"david@email.com\",\n//         name: \"david\",\n//     },\n//     {\n//         id: 12,\n//         username: \"ema@email.com\",\n//         email: \"ema@email.com\",\n//         name: \"ema\",\n//     },\n// ];\n\nfunction CreateExpensePopup({\n    show,\n    onClose,\n    handleExpenseUpdate,\n    groupDetails,\n}) {\n    const dispatch = useDispatch();\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertVariant, setAlertVariant] = useState(\"\");\n    const [updatedDescription, setUpdatedDescription] = useState(\"\");\n    const [updatedAmountPaid, setUpdatedAmountPaid] = useState(0);\n    const [userAmounts, setUserAmounts] = useState({});\n    const [isEvenlySplit, setIsEvenlySplit] = useState(false);\n    const userData = groupDetails.members;\n    // console.log(groupDetails);\n    // const groupDetails = useSelector((state) => state.groupDetails);\n    // const {\n    //     error: groupDetailsError,\n    //     loading: groupDetailsLoading,\n    //     groupDetail,\n    // } = groupDetails;\n\n    // const groupExpenseDetailUpdate = useSelector(\n    //     (state) => state.groupExpenseDetailUpdate\n    // );\n    // const { success: groupExpenseDetailUpdateSuccess } =\n    //     groupExpenseDetailUpdate;\n\n    // Function to handle changes in user amount inputs\n    const handleUserAmountChange = (userId, amount) => {\n        setUserAmounts((prevAmounts) => ({\n            ...prevAmounts,\n            [userId]: amount,\n        }));\n    };\n\n    const evenlySplitAmount = (mostRecentUpdatedAmount) => {\n        const numberOfUsers = Object.keys(userAmounts).length;\n        var perUserAmount;\n        if (mostRecentUpdatedAmount === 0) {\n            perUserAmount = 0;\n        } else {\n            perUserAmount = mostRecentUpdatedAmount / numberOfUsers;\n        }\n\n        const evenlySplitUserAmounts = {};\n\n        for (const userId in userAmounts) {\n            evenlySplitUserAmounts[userId] = perUserAmount;\n        }\n\n        setUserAmounts(evenlySplitUserAmounts);\n    };\n\n    const handleIsEvenlySplitChange = (e) => {\n        setIsEvenlySplit(e.target.checked);\n        if (e.target.checked) {\n            evenlySplitAmount(updatedAmountPaid);\n        }\n    };\n\n    const handleAmountPaidChange = (e) => {\n        const newValue = parseFloat(e.target.value);\n        var mostRecentAmount;\n        if (!isNaN(newValue)) {\n            setUpdatedAmountPaid(newValue);\n            mostRecentAmount = newValue;\n        } else {\n            setUpdatedAmountPaid(0);\n            mostRecentAmount = 0;\n        }\n\n        if (isEvenlySplit) {\n            evenlySplitAmount(mostRecentAmount);\n        }\n    };\n\n    const handleSubmit = () => {\n        // Calculate the total amount from userAmounts\n        const totalAmount = Object.values(userAmounts).reduce(\n            (total, amount) => total + parseFloat(amount || 0),\n            0\n        );\n\n        // Check if the total amount is not equal to the expense amount\n        if (\n            parseFloat(totalAmount).toFixed(2) !==\n            parseFloat(updatedAmountPaid).toFixed(2)\n        ) {\n            handleShowAlert(\n                \"Expense distribution doesn't add up to expense amount\",\n                \"danger\"\n            );\n        } else {\n            // Create an array of expense_details based on userAmounts\n            const expenseDetails = Object.keys(userAmounts).map((userId) => ({\n                user: Number(userId),\n                amount_owed: parseFloat(\n                    parseFloat(userAmounts[userId]).toFixed(2)\n                ),\n            }));\n\n            // Create the data object to be logged\n            const updatedData = {\n                description: updatedDescription,\n                amount: parseFloat(parseFloat(updatedAmountPaid).toFixed(2)),\n                expense_details: expenseDetails,\n                isEvenlySplit: isEvenlySplit,\n            };\n\n            // dispatch(\n            //     updateGroupExpense(expense.group, expense.id, updatedData)\n            // );\n            console.log(updatedData);\n            handleClose();\n        }\n    };\n\n    const handleClose = () => {\n        // dispatch({ type: GROUP_EXPENSES_DETAILS_CREATE_RESET });\n        onClose();\n    };\n\n    const handleShowAlert = useCallback((message, variant) => {\n        setAlertMessage(message);\n        setAlertVariant(variant);\n        setShowAlert(true);\n        setTimeout(() => {\n            setShowAlert(false);\n        }, 3000);\n    }, []);\n\n    // useEffect(() => {\n    //     if (groupExpenseDetailUpdateSuccess) {\n    //         // tells ExpenseList.js to update the list\n    //         handleExpenseUpdate();\n    //         handleShowAlert(\"Successfully updated expense\", \"success\");\n    //     } else if (groupExpenseDetailUpdateSuccess === false) {\n    //         handleShowAlert(\n    //             \"Error occurred while trying to update success\",\n    //             \"danger\"\n    //         );\n    //     }\n    // }, [groupExpenseDetailUpdateSuccess, handleShowAlert, handleExpenseUpdate]);\n\n    useEffect(() => {\n        // Initialize userAmounts with initial data from userData\n        const initialUserAmounts = {};\n        userData.forEach((user) => {\n            initialUserAmounts[user.id] = 0;\n        });\n        setUserAmounts(initialUserAmounts);\n    }, [userData]);\n\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose} centered>\n                <Modal.Body>\n                    <Row className=\"expense-detail-popout py-3\">\n                        <Col className=\"left-col\">\n                            <h5>Expense Details</h5>\n                            <div className=\"d-flex flex-row my-2\">\n                                <h6 className=\"my-0 me-2\">Amount Paid:</h6>\n                                <FormControl\n                                    type=\"number\"\n                                    value={updatedAmountPaid}\n                                    onChange={handleAmountPaidChange}\n                                    inputMode=\"numeric\"\n                                    pattern=\"[0-9]*\"\n                                />\n                            </div>\n                            <div className=\"d-flex flex-column my-2\">\n                                <h6 className=\"my-2\">Description:</h6>\n                                <FormControl\n                                    as=\"textarea\"\n                                    rows={4}\n                                    value={updatedDescription}\n                                    onChange={(e) => {\n                                        setUpdatedDescription(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </Col>\n                        <Col className=\"right-col border-primary\">\n                            <h5>Expense Distribution</h5>\n                            <div\n                                className={`${isEvenlySplit ? \"disabled\" : \"\"}`}\n                            >\n                                {userData.map((user) => (\n                                    <div key={user.id}>\n                                        <div\n                                            className={`detail d-flex flex-row align-items-center my-2`}\n                                        >\n                                            <strong>{user.name}</strong>\n                                            's&nbsp;split&nbsp;is&nbsp;$\n                                            <FormControl\n                                                type=\"number\"\n                                                value={userAmounts[user.id]}\n                                                onChange={(e) =>\n                                                    handleUserAmountChange(\n                                                        user.id,\n                                                        e.target.value\n                                                    )\n                                                }\n                                                inputMode=\"numeric\"\n                                                pattern=\"[0-9]*\"\n                                                disabled={isEvenlySplit}\n                                            />\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"d-flex flex-row align-items-center my-2\">\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id=\"evenlySplitCheckbox\"\n                                    label=\"Evenly Split\"\n                                    checked={isEvenlySplit}\n                                    onChange={handleIsEvenlySplitChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save Changes\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n                {showAlert && (\n                    <AlertMessage\n                        message={alertMessage}\n                        variant={alertVariant}\n                    />\n                )}\n            </Modal>\n            {showAlert && (\n                <AlertMessage message={alertMessage} variant={alertVariant} />\n            )}\n        </div>\n    );\n}\n\nexport default CreateExpensePopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}