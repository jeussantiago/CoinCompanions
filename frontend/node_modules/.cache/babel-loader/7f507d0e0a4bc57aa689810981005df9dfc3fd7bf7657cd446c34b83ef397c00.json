{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/screens/IndividualGroupScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../../styles/screens/GroupsScreens.css\";\nimport Message from \"../Message\";\nimport AlertMessage from \"../AlertMessage\";\n\n/**\n * if the user is not logged in. navigate to home page\n * if the user is not part of the group. navigate to the groups page\n *\n * modify group name\n * create group button\n *\n *\n * expense chart\n * list expenses\n *      type='expense' or 'settle'\n *      date_added\n *      description\n *      how_much\n *      who paid\n *      (edit button)\n *\n * add expense\n *      (will use the same form as edit expense. will have conditional to differentiate between adding expense and updating)\n *\n * (when you click an expense, it expands to show the specifics)\n *      how much each person owes the payer\n *\n * Expense Edit\n *      able to see how much each person paid\n *      decide to split it by:\n *          - raw numbers\n *          - percentage\n *          - evenly split\n *\n * RIGHT SIDE:\n * list all the users and their debt to each person or how much they are owed from certain people\n *\n * search bar to invite other users to group\n *\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IndividualGroupScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const groupDetails = useSelector(state => state.groupDetails);\n  const {\n    error: groupDetailsError,\n    loading: groupDetailsLoading,\n    groupDetail\n  } = groupDetails;\n\n  // NAVIGATE THE USER AWAY IF THEY ARE NOT PART OF THIS GROUP\n  useEffect(() => {\n    if (groupDetail) {\n      // if groupDetail.members.includes()\n    }\n  }, [navigate, groupDetail]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"route-container screen-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"IndividualGroupScreen : Group \", id, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(IndividualGroupScreen, \"Wi7s1yJ6BK4mew1TuQHgHgV9Mrc=\", false, function () {\n  return [useDispatch, useParams, useNavigate, useSelector];\n});\n_c = IndividualGroupScreen;\nexport default IndividualGroupScreen;\nvar _c;\n$RefreshReg$(_c, \"IndividualGroupScreen\");","map":{"version":3,"names":["React","useEffect","Link","useNavigate","useParams","useDispatch","useSelector","Message","AlertMessage","jsxDEV","_jsxDEV","IndividualGroupScreen","_s","dispatch","id","navigate","groupDetails","state","error","groupDetailsError","loading","groupDetailsLoading","groupDetail","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/screens/IndividualGroupScreen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"../../styles/screens/GroupsScreens.css\";\nimport Message from \"../Message\";\nimport AlertMessage from \"../AlertMessage\";\n\n/**\n * if the user is not logged in. navigate to home page\n * if the user is not part of the group. navigate to the groups page\n *\n * modify group name\n * create group button\n *\n *\n * expense chart\n * list expenses\n *      type='expense' or 'settle'\n *      date_added\n *      description\n *      how_much\n *      who paid\n *      (edit button)\n *\n * add expense\n *      (will use the same form as edit expense. will have conditional to differentiate between adding expense and updating)\n *\n * (when you click an expense, it expands to show the specifics)\n *      how much each person owes the payer\n *\n * Expense Edit\n *      able to see how much each person paid\n *      decide to split it by:\n *          - raw numbers\n *          - percentage\n *          - evenly split\n *\n * RIGHT SIDE:\n * list all the users and their debt to each person or how much they are owed from certain people\n *\n * search bar to invite other users to group\n *\n *\n */\nfunction IndividualGroupScreen() {\n    const dispatch = useDispatch();\n\n    const { id } = useParams();\n    const navigate = useNavigate();\n\n    const groupDetails = useSelector((state) => state.groupDetails);\n    const {\n        error: groupDetailsError,\n        loading: groupDetailsLoading,\n        groupDetail,\n    } = groupDetails;\n\n    // NAVIGATE THE USER AWAY IF THEY ARE NOT PART OF THIS GROUP\n    useEffect(() => {\n        if (groupDetail) {\n            // if groupDetail.members.includes()\n        }\n    }, [navigate, groupDetail]);\n\n    return (\n        <div className=\"route-container screen-container\">\n            <div>IndividualGroupScreen : Group {id} </div>\n        </div>\n    );\n}\n\nexport default IndividualGroupScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,IAAI,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC/D,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,OAAO,wCAAwC;AAC/C,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,YAAY,MAAM,iBAAiB;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA,SAAAC,MAAA,IAAAC,OAAA;AAqCA,SAASC,qBAAqBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAES;EAAG,CAAC,GAAGV,SAAS,CAAC,CAAC;EAC1B,MAAMW,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,YAAY,CAAC;EAC/D,MAAM;IACFE,KAAK,EAAEC,iBAAiB;IACxBC,OAAO,EAAEC,mBAAmB;IAC5BC;EACJ,CAAC,GAAGN,YAAY;;EAEhB;EACAf,SAAS,CAAC,MAAM;IACZ,IAAIqB,WAAW,EAAE;MACb;IAAA;EAER,CAAC,EAAE,CAACP,QAAQ,EAAEO,WAAW,CAAC,CAAC;EAE3B,oBACIZ,OAAA;IAAKa,SAAS,EAAC,kCAAkC;IAAAC,QAAA,eAC7Cd,OAAA;MAAAc,QAAA,GAAK,gCAA8B,EAACV,EAAE,EAAC,GAAC;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEd;AAAChB,EAAA,CAzBQD,qBAAqB;EAAA,QACTN,WAAW,EAEbD,SAAS,EACPD,WAAW,EAEPG,WAAW;AAAA;AAAAuB,EAAA,GAN3BlB,qBAAqB;AA2B9B,eAAeA,qBAAqB;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}