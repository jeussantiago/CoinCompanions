{"ast":null,"code":"import _slicedToArray from\"/Users/jeussantiago/Documents/coding/django/CoinCompanions/backend/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{Row,Col}from\"react-bootstrap\";import\"../../styles/screens/DashboardScreen.css\";import Message from\"../Message\";import{getUsersGroupsTotalCreditDebit}from\"../../actions/userActions\";/**\n * I could have created APIs that give me the data I want (group total credit and group\n * total debt) similar to DashboardScreenComponents/FriendsSummary.js, and simply just call\n * thos APIs and use the data using actions and reducers. However, I wanted to try out having\n * not ideal data and requiring formatting. This is why in this component I used existing\n * actions and reducers and formatted it to fit the structure I desired.\n *\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function GroupSummary(){var dispatch=useDispatch();var collapseSize=4;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),userDebtList=_useState2[0],setUserDebtList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),userCreditList=_useState4[0],setUserCreditList=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showAll=_useState6[0],setShowAll=_useState6[1];var usersGroupsTotalDebtCredit=useSelector(function(state){return state.usersGroupsTotalDebtCredit;});var userGroupsTotalCreditDebitError=usersGroupsTotalDebtCredit.error,userGroupsTotalCreditDebitLoading=usersGroupsTotalDebtCredit.loading,userGroupsTotalCreditDebit=usersGroupsTotalDebtCredit.userGroupsTotalCreditDebit;var handleShowMore=function handleShowMore(){setShowAll(!showAll);};useEffect(function(){if(userGroupsTotalCreditDebit){var updatedUserDebtList=[];var updatedUserCreditList=[];for(var groupId in userGroupsTotalCreditDebit){var groupData=userGroupsTotalCreditDebit[groupId];var group_name=groupData.group_name,total_credit=groupData.total_credit,total_debt=groupData.total_debt;// Create unique keys based on groupId and data type\nvar creditKey=\"\".concat(groupId,\"_credit\");var debtKey=\"\".concat(groupId,\"_debt\");// Check if total_credit exists and add it to the list\nif(total_credit!==null){updatedUserCreditList.push({groupId:groupId,groupName:group_name,totalCredit:total_credit.toFixed(2),key:creditKey});}// Check if total_debt exists and add it to the list\nif(total_debt!==null){updatedUserDebtList.push({groupId:groupId,groupName:group_name,totalDebt:total_debt.toFixed(2),key:debtKey});}}// Update the state with the new arrays\nsetUserCreditList(updatedUserCreditList);setUserDebtList(updatedUserDebtList);}},[userGroupsTotalCreditDebit]);useEffect(function(){dispatch(getUsersGroupsTotalCreditDebit());},[dispatch]);return/*#__PURE__*/_jsxs(\"div\",{className:\"dashboard-section-container\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Groups Summary\"}),/*#__PURE__*/_jsxs(Row,{className:\"dashboard-section-box-container\",children:[/*#__PURE__*/_jsxs(Col,{md:6,className:\"dashboard-section-box-container-col \",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h6\",{children:\"Groups you owe\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-box\",children:userGroupsTotalCreditDebitLoading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):userGroupsTotalCreditDebitError?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:userGroupsTotalCreditDebitError}):userDebtList.length===0?/*#__PURE__*/_jsx(\"h6\",{className:\"py-3 text-center\",children:\"You don't owe any group money\"}):/*#__PURE__*/_jsx(\"div\",{className:\"m-0\",children:userDebtList.slice(0,showAll?userDebtList.length:collapseSize).map(function(group){return/*#__PURE__*/_jsxs(\"div\",{className:\"summary-box-item d-flex flex-row justify-content-between\",children:[/*#__PURE__*/_jsx(\"div\",{children:group.groupName}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-secondary\",children:[\"$\",group.totalDebt]})]},group.key);})})})]}),/*#__PURE__*/_jsxs(Col,{md:6,className:\"dashboard-section-box-container-col\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"h6\",{children:\"Groups owe to you\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"summary-box\",children:userGroupsTotalCreditDebitLoading?/*#__PURE__*/_jsx(\"div\",{children:\"Loading...\"}):userGroupsTotalCreditDebitError?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:userGroupsTotalCreditDebitError}):userCreditList.length===0?/*#__PURE__*/_jsx(\"h6\",{className:\"py-3 text-center\",children:\"No group owes you\"}):/*#__PURE__*/_jsx(\"div\",{className:\"m-0 \",children:userCreditList.slice(0,showAll?userCreditList.length:collapseSize).map(function(group){return/*#__PURE__*/_jsxs(\"div\",{className:\"summary-box-item d-flex flex-row justify-content-between\",children:[/*#__PURE__*/_jsx(\"div\",{children:group.groupName}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-primary\",children:[\"$\",group.totalCredit]})]},group.key);})})})]}),(userDebtList.length>collapseSize||userCreditList.length>collapseSize)&&/*#__PURE__*/_jsx(\"div\",{onClick:function onClick(){return handleShowMore();},className:\"show-more-button mt-4\",children:showAll?/*#__PURE__*/_jsxs(\"div\",{children:[\"Show less\",\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-angles-up\"})]}):/*#__PURE__*/_jsxs(\"div\",{children:[\"Show all\",\" \",/*#__PURE__*/_jsx(\"i\",{className:\"fa-solid fa-angles-down\"})]})})]})]});}export default GroupSummary;","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Row","Col","Message","getUsersGroupsTotalCreditDebit","jsx","_jsx","jsxs","_jsxs","GroupSummary","dispatch","collapseSize","_useState","_useState2","_slicedToArray","userDebtList","setUserDebtList","_useState3","_useState4","userCreditList","setUserCreditList","_useState5","_useState6","showAll","setShowAll","usersGroupsTotalDebtCredit","state","userGroupsTotalCreditDebitError","error","userGroupsTotalCreditDebitLoading","loading","userGroupsTotalCreditDebit","handleShowMore","updatedUserDebtList","updatedUserCreditList","groupId","groupData","group_name","total_credit","total_debt","creditKey","concat","debtKey","push","groupName","totalCredit","toFixed","key","totalDebt","className","children","md","variant","length","slice","map","group","onClick"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/backend/frontend/src/components/DashboardScreenComponents/GroupSummary.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport \"../../styles/screens/DashboardScreen.css\";\nimport Message from \"../Message\";\nimport { getUsersGroupsTotalCreditDebit } from \"../../actions/userActions\";\n\n/**\n * I could have created APIs that give me the data I want (group total credit and group\n * total debt) similar to DashboardScreenComponents/FriendsSummary.js, and simply just call\n * thos APIs and use the data using actions and reducers. However, I wanted to try out having\n * not ideal data and requiring formatting. This is why in this component I used existing\n * actions and reducers and formatted it to fit the structure I desired.\n *\n */\nfunction GroupSummary() {\n    const dispatch = useDispatch();\n    const collapseSize = 4;\n    const [userDebtList, setUserDebtList] = useState([]);\n    const [userCreditList, setUserCreditList] = useState([]);\n    const [showAll, setShowAll] = useState(false);\n\n    const usersGroupsTotalDebtCredit = useSelector(\n        (state) => state.usersGroupsTotalDebtCredit\n    );\n    const {\n        error: userGroupsTotalCreditDebitError,\n        loading: userGroupsTotalCreditDebitLoading,\n        userGroupsTotalCreditDebit,\n    } = usersGroupsTotalDebtCredit;\n\n    const handleShowMore = () => {\n        setShowAll(!showAll);\n    };\n\n    useEffect(() => {\n        if (userGroupsTotalCreditDebit) {\n            const updatedUserDebtList = [];\n            const updatedUserCreditList = [];\n\n            for (const groupId in userGroupsTotalCreditDebit) {\n                const groupData = userGroupsTotalCreditDebit[groupId];\n                const { group_name, total_credit, total_debt } = groupData;\n                // Create unique keys based on groupId and data type\n                const creditKey = `${groupId}_credit`;\n                const debtKey = `${groupId}_debt`;\n\n                // Check if total_credit exists and add it to the list\n                if (total_credit !== null) {\n                    updatedUserCreditList.push({\n                        groupId: groupId,\n                        groupName: group_name,\n                        totalCredit: total_credit.toFixed(2),\n                        key: creditKey,\n                    });\n                }\n\n                // Check if total_debt exists and add it to the list\n                if (total_debt !== null) {\n                    updatedUserDebtList.push({\n                        groupId: groupId,\n                        groupName: group_name,\n                        totalDebt: total_debt.toFixed(2),\n                        key: debtKey,\n                    });\n                }\n            }\n\n            // Update the state with the new arrays\n            setUserCreditList(updatedUserCreditList);\n            setUserDebtList(updatedUserDebtList);\n        }\n    }, [userGroupsTotalCreditDebit]);\n\n    useEffect(() => {\n        dispatch(getUsersGroupsTotalCreditDebit());\n    }, [dispatch]);\n\n    return (\n        <div className=\"dashboard-section-container\">\n            <h4>Groups Summary</h4>\n            <Row className=\"dashboard-section-box-container\">\n                <Col md={6} className=\"dashboard-section-box-container-col \">\n                    <div>\n                        <h6>Groups you owe</h6>\n                    </div>\n                    <div className=\"summary-box\">\n                        {userGroupsTotalCreditDebitLoading ? (\n                            <div>Loading...</div>\n                        ) : userGroupsTotalCreditDebitError ? (\n                            <Message variant=\"danger\">\n                                {userGroupsTotalCreditDebitError}\n                            </Message>\n                        ) : userDebtList.length === 0 ? (\n                            <h6 className=\"py-3 text-center\">\n                                You don't owe any group money\n                            </h6>\n                        ) : (\n                            <div className=\"m-0\">\n                                {userDebtList\n                                    .slice(\n                                        0,\n                                        showAll\n                                            ? userDebtList.length\n                                            : collapseSize\n                                    )\n                                    .map((group) => (\n                                        <div\n                                            key={group.key}\n                                            className=\"summary-box-item d-flex flex-row justify-content-between\"\n                                        >\n                                            <div>{group.groupName}</div>\n                                            <div className=\"text-secondary\">\n                                                ${group.totalDebt}\n                                            </div>\n                                        </div>\n                                    ))}\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                <Col md={6} className=\"dashboard-section-box-container-col\">\n                    <div>\n                        <h6>Groups owe to you</h6>\n                    </div>\n                    <div className=\"summary-box\">\n                        {userGroupsTotalCreditDebitLoading ? (\n                            <div>Loading...</div>\n                        ) : userGroupsTotalCreditDebitError ? (\n                            <Message variant=\"danger\">\n                                {userGroupsTotalCreditDebitError}\n                            </Message>\n                        ) : userCreditList.length === 0 ? (\n                            <h6 className=\"py-3 text-center\">\n                                No group owes you\n                            </h6>\n                        ) : (\n                            <div className=\"m-0 \">\n                                {userCreditList\n                                    .slice(\n                                        0,\n                                        showAll\n                                            ? userCreditList.length\n                                            : collapseSize\n                                    )\n                                    .map((group) => (\n                                        <div\n                                            key={group.key}\n                                            className=\"summary-box-item d-flex flex-row justify-content-between\"\n                                        >\n                                            <div>{group.groupName}</div>\n                                            <div className=\"text-primary\">\n                                                ${group.totalCredit}\n                                            </div>\n                                        </div>\n                                    ))}\n                            </div>\n                        )}\n                    </div>\n                </Col>\n\n                {(userDebtList.length > collapseSize ||\n                    userCreditList.length > collapseSize) && (\n                    <div\n                        onClick={() => handleShowMore()}\n                        className=\"show-more-button mt-4\"\n                    >\n                        {showAll ? (\n                            <div>\n                                Show less{\" \"}\n                                <i className=\"fa-solid fa-angles-up\"></i>\n                            </div>\n                        ) : (\n                            <div>\n                                Show all{\" \"}\n                                <i className=\"fa-solid fa-angles-down\"></i>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </Row>\n        </div>\n    );\n}\n\nexport default GroupSummary;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}