{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/UpdateNamePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Modal, Button, FormControl } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport AlertMessage from \"../AlertMessage\";\n// import { GROUP_NAME_UPDATE_RESET } from \"../../constants/groupConstants\";\nimport { updateGroupName } from \"../../actions/groupActions\";\n\n//groupNameIsUpdated,\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UpdateNamePopup({\n  show,\n  onClose,\n  currentGroupName,\n  groupId\n}) {\n  _s();\n  const dispatch = useDispatch();\n  // const [showAlert, setShowAlert] = useState(false);\n  // const [alertMessage, setAlertMessage] = useState(\"\");\n  // const [alertVariant, setAlertVariant] = useState(\"\");\n  const [groupName, setGroupName] = useState(currentGroupName);\n\n  // const groupNameUpdate = useSelector((state) => state.groupNameUpdate);\n  // const { success: groupNameUpdateSuccess } = groupNameUpdate;\n\n  const handleClose = () => {\n    setGroupName(currentGroupName);\n    onClose();\n    // dispatch({ type: GROUP_NAME_UPDATE_RESET });\n  };\n\n  const handleSubmit = () => {\n    dispatch(updateGroupName(groupId, groupName));\n    // groupNameIsUpdated();\n    handleClose(); // Now handleClose is defined before use\n  };\n\n  // const handleShowAlert = useCallback((message, variant) => {\n  //     setAlertMessage(message);\n  //     setAlertVariant(variant);\n  //     setShowAlert(true);\n  //     setTimeout(() => {\n  //         setShowAlert(false);\n  //     }, 3000);\n  // }, []);\n\n  // useEffect(() => {\n  //     if (groupNameUpdateSuccess) {\n  //         handleShowAlert(\"Updated group name\", \"success\");\n  //     } else if (groupNameUpdateSuccess === false) {\n  //         handleShowAlert(\n  //             \"Error occurred while trying to update group name\",\n  //             \"danger\"\n  //         );\n  //     }\n  // }, [groupNameUpdateSuccess, handleShowAlert]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: onClose,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Edit Group Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          type: \"text\",\n          placeholder: \"Enter new group name...\",\n          value: groupName,\n          onChange: e => setGroupName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n}\n_s(UpdateNamePopup, \"LJxUG+BVYaBmekOlSpnCE1XqGGA=\", false, function () {\n  return [useDispatch];\n});\n_c = UpdateNamePopup;\nexport default UpdateNamePopup;\nvar _c;\n$RefreshReg$(_c, \"UpdateNamePopup\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Modal","Button","FormControl","useDispatch","useSelector","AlertMessage","updateGroupName","jsxDEV","_jsxDEV","UpdateNamePopup","show","onClose","currentGroupName","groupId","_s","dispatch","groupName","setGroupName","handleClose","handleSubmit","children","onHide","Header","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","type","placeholder","value","onChange","e","target","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/UpdateNamePopup.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Modal, Button, FormControl } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport AlertMessage from \"../AlertMessage\";\n// import { GROUP_NAME_UPDATE_RESET } from \"../../constants/groupConstants\";\nimport { updateGroupName } from \"../../actions/groupActions\";\n\n//groupNameIsUpdated,\nfunction UpdateNamePopup({ show, onClose, currentGroupName, groupId }) {\n    const dispatch = useDispatch();\n    // const [showAlert, setShowAlert] = useState(false);\n    // const [alertMessage, setAlertMessage] = useState(\"\");\n    // const [alertVariant, setAlertVariant] = useState(\"\");\n    const [groupName, setGroupName] = useState(currentGroupName);\n\n    // const groupNameUpdate = useSelector((state) => state.groupNameUpdate);\n    // const { success: groupNameUpdateSuccess } = groupNameUpdate;\n\n    const handleClose = () => {\n        setGroupName(currentGroupName);\n        onClose();\n        // dispatch({ type: GROUP_NAME_UPDATE_RESET });\n    };\n\n    const handleSubmit = () => {\n        dispatch(updateGroupName(groupId, groupName));\n        // groupNameIsUpdated();\n        handleClose(); // Now handleClose is defined before use\n    };\n\n    // const handleShowAlert = useCallback((message, variant) => {\n    //     setAlertMessage(message);\n    //     setAlertVariant(variant);\n    //     setShowAlert(true);\n    //     setTimeout(() => {\n    //         setShowAlert(false);\n    //     }, 3000);\n    // }, []);\n\n    // useEffect(() => {\n    //     if (groupNameUpdateSuccess) {\n    //         handleShowAlert(\"Updated group name\", \"success\");\n    //     } else if (groupNameUpdateSuccess === false) {\n    //         handleShowAlert(\n    //             \"Error occurred while trying to update group name\",\n    //             \"danger\"\n    //         );\n    //     }\n    // }, [groupNameUpdateSuccess, handleShowAlert]);\n\n    return (\n        <div>\n            <Modal show={show} onHide={onClose}>\n                <Modal.Header>\n                    <Modal.Title>Edit Group Name</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <FormControl\n                        type=\"text\"\n                        placeholder=\"Enter new group name...\"\n                        value={groupName}\n                        onChange={(e) => setGroupName(e.target.value)}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save Changes\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            {/* {showAlert && (\n                <AlertMessage message={alertMessage} variant={alertVariant} />\n            )} */}\n        </div>\n    );\n}\n\nexport default UpdateNamePopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}