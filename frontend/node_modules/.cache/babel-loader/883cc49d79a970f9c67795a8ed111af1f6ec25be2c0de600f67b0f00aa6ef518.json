{"ast":null,"code":"import axios from \"axios\";\nimport { GROUP_INVITE_DECLINE_REQUEST, GROUP_INVITE_DECLINE_SUCCESS, GROUP_INVITE_DECLINE_FAIL, GROUP_CREATE_REQUEST, GROUP_CREATE_SUCCESS, GROUP_CREATE_FAIL, GROUP_LIST_REQUEST, GROUP_LIST_SUCCESS, GROUP_LIST_FAIL } from \"../constants/groupConstants\";\nexport const deleteGroupInvite = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_INVITE_DECLINE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/groups/invitations/${id}/decline/`, config);\n    dispatch({\n      type: GROUP_INVITE_DECLINE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: GROUP_INVITE_DECLINE_FAIL,\n      payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n    });\n  }\n};\nexport const createGroup = title => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/groups/create/`, {\n      name: title\n    }, config);\n    dispatch({\n      type: GROUP_CREATE_SUCCESS\n    });\n  } catch (err) {\n    dispatch({\n      type: GROUP_CREATE_FAIL,\n      payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n    });\n  }\n};\nexport const getGroupsList = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: GROUP_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/groups/`, config);\n    dispatch({\n      type: GROUP_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (err) {\n    dispatch({\n      type: GROUP_LIST_FAIL,\n      payload: err.response && err.response.data.detail ? err.response.data.detail : err.message\n    });\n  }\n};","map":{"version":3,"names":["axios","GROUP_INVITE_DECLINE_REQUEST","GROUP_INVITE_DECLINE_SUCCESS","GROUP_INVITE_DECLINE_FAIL","GROUP_CREATE_REQUEST","GROUP_CREATE_SUCCESS","GROUP_CREATE_FAIL","GROUP_LIST_REQUEST","GROUP_LIST_SUCCESS","GROUP_LIST_FAIL","deleteGroupInvite","id","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","delete","err","payload","response","data","detail","message","createGroup","title","post","name","getGroupsList","get"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/actions/groupActions.js"],"sourcesContent":["import axios from \"axios\";\nimport {\n    GROUP_INVITE_DECLINE_REQUEST,\n    GROUP_INVITE_DECLINE_SUCCESS,\n    GROUP_INVITE_DECLINE_FAIL,\n    GROUP_CREATE_REQUEST,\n    GROUP_CREATE_SUCCESS,\n    GROUP_CREATE_FAIL,\n    GROUP_LIST_REQUEST,\n    GROUP_LIST_SUCCESS,\n    GROUP_LIST_FAIL,\n} from \"../constants/groupConstants\";\n\nexport const deleteGroupInvite = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: GROUP_INVITE_DECLINE_REQUEST });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.delete(`/api/groups/invitations/${id}/decline/`, config);\n\n        dispatch({ type: GROUP_INVITE_DECLINE_SUCCESS });\n    } catch (err) {\n        dispatch({\n            type: GROUP_INVITE_DECLINE_FAIL,\n            payload:\n                err.response && err.response.data.detail\n                    ? err.response.data.detail\n                    : err.message,\n        });\n    }\n};\n\nexport const createGroup = (title) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: GROUP_CREATE_REQUEST });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        await axios.post(`/api/groups/create/`, { name: title }, config);\n\n        dispatch({ type: GROUP_CREATE_SUCCESS });\n    } catch (err) {\n        dispatch({\n            type: GROUP_CREATE_FAIL,\n            payload:\n                err.response && err.response.data.detail\n                    ? err.response.data.detail\n                    : err.message,\n        });\n    }\n};\n\nexport const getGroupsList = () => async (dispatch, getState) => {\n    try {\n        dispatch({ type: GROUP_LIST_REQUEST });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/users/groups/`, config);\n\n        dispatch({ type: GROUP_LIST_SUCCESS, payload: data });\n    } catch (err) {\n        dispatch({\n            type: GROUP_LIST_FAIL,\n            payload:\n                err.response && err.response.data.detail\n                    ? err.response.data.detail\n                    : err.message,\n        });\n    }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}