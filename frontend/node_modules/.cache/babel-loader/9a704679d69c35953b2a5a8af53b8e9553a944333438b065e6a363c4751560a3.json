{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/screens/FriendsScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getUsersFriends } from \"../actions/userActions\";\n/**\n * Pending Friend Request\n *      if there is a pending friend request, then a red dot appears on the sidebar\n * \n * mid: 2 boxes\n * left box is who owes you in green\n * right box are the people who owe you in red\n * \n * list of friends: below spreads 100% width\n * \n * button at top to search for people to add as friends\n * - each person in search results will have the option to \"send friend request\" or \"already friends\"(unclickable)\n * \n * each friend has 3 dots\n * if you click the 3 dots, 2 options \n * a. delete friend => pop up will show if you want to confirm deleting friend\n * b. add friend to group => pop up will show what groups you are in  (on right side of pop up will be \n * \"send invite\" or \"friend already part of group\"(unclickable))\n * \n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FriendsScreen() {\n  _s();\n  const dispatch = useDispatch();\n  const userFriendsList = useSelector(state => state.userFriendsList);\n  const {\n    error,\n    loading,\n    userFriends\n  } = userFriendsList;\n  console.log(userFriends);\n  useEffect(() => {\n    dispatch(getUsersFriends());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"FriendsScreen\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: userFriends.map((friend, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-3 col-sm-6 mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"card-title\",\n              children: friend.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, friend.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n_s(FriendsScreen, \"E/uVdgRrj9CHw9k2Asz0Rk5wwJ8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = FriendsScreen;\nexport default FriendsScreen;\nvar _c;\n$RefreshReg$(_c, \"FriendsScreen\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","getUsersFriends","jsxDEV","_jsxDEV","FriendsScreen","_s","dispatch","userFriendsList","state","error","loading","userFriends","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","friend","index","username","id","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/screens/FriendsScreen.js"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getUsersFriends } from \"../actions/userActions\";\n/**\n * Pending Friend Request\n *      if there is a pending friend request, then a red dot appears on the sidebar\n * \n * mid: 2 boxes\n * left box is who owes you in green\n * right box are the people who owe you in red\n * \n * list of friends: below spreads 100% width\n * \n * button at top to search for people to add as friends\n * - each person in search results will have the option to \"send friend request\" or \"already friends\"(unclickable)\n * \n * each friend has 3 dots\n * if you click the 3 dots, 2 options \n * a. delete friend => pop up will show if you want to confirm deleting friend\n * b. add friend to group => pop up will show what groups you are in  (on right side of pop up will be \n * \"send invite\" or \"friend already part of group\"(unclickable))\n * \n */\n\nfunction FriendsScreen() {\n    const dispatch = useDispatch();\n\n    const userFriendsList = useSelector((state) => state.userFriendsList)\n    const { error, loading, userFriends } = userFriendsList\n\n    console.log(userFriends)\n\n    useEffect(() => {\n        dispatch(getUsersFriends())\n    }, [dispatch])\n\n\n\n    return (\n        <div>\n            <div>FriendsScreen</div>\n            <div className=\"row\">\n                {userFriends.map((friend, index) => (\n                <div key={friend.id} className=\"col-md-3 col-sm-6 mb-4\">\n                    {/* Render user details here */}\n                    <div className=\"card\">\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{friend.username}</h5>\n                        {/* Other user details */}\n                    </div>\n                    </div>\n                </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default FriendsScreen;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,eAAe,QAAQ,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA,SAAAC,MAAA,IAAAC,OAAA;AAqBA,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,eAAe,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACD,eAAe,CAAC;EACrE,MAAM;IAAEE,KAAK;IAAEC,OAAO;IAAEC;EAAY,CAAC,GAAGJ,eAAe;EAEvDK,OAAO,CAACC,GAAG,CAACF,WAAW,CAAC;EAExBb,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAACL,eAAe,CAAC,CAAC,CAAC;EAC/B,CAAC,EAAE,CAACK,QAAQ,CAAC,CAAC;EAId,oBACIH,OAAA;IAAAW,QAAA,gBACIX,OAAA;MAAAW,QAAA,EAAK;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxBf,OAAA;MAAKgB,SAAS,EAAC,KAAK;MAAAL,QAAA,EACfH,WAAW,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBAC/BnB,OAAA;QAAqBgB,SAAS,EAAC,wBAAwB;QAAAL,QAAA,eAEnDX,OAAA;UAAKgB,SAAS,EAAC,MAAM;UAAAL,QAAA,eACrBX,OAAA;YAAKgB,SAAS,EAAC,WAAW;YAAAL,QAAA,eACtBX,OAAA;cAAIgB,SAAS,EAAC,YAAY;cAAAL,QAAA,EAAEO,MAAM,CAACE;YAAQ;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEhD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC,GAPAG,MAAM,CAACG,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQd,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACb,EAAA,CAhCQD,aAAa;EAAA,QACDL,WAAW,EAEJC,WAAW;AAAA;AAAAyB,EAAA,GAH9BrB,aAAa;AAkCtB,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}