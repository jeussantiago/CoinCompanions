{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/CreateExpensePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Modal, Button, Row, Col, FormControl, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport \"../../styles/screens/GroupsScreens.css\";\nimport AlertMessage from \"../AlertMessage\";\n// import { createGroupExpense } from \"../../actions/groupActions\";\n// import { GROUP_EXPENSES_DETAILS_CREATE_RESET } from \"../../constants/groupConstants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userData = [{\n  id: 1,\n  username: \"jeus@email.com\",\n  email: \"jeus@email.com\",\n  name: \"Jeus\"\n}, {\n  id: 3,\n  username: \"tim@email.com\",\n  email: \"tim@email.com\",\n  name: \"tim\"\n}, {\n  id: 9,\n  username: \"bob@email.com\",\n  email: \"bob@email.com\",\n  name: \"bob\"\n}, {\n  id: 10,\n  username: \"charlie@email.com\",\n  email: \"charlie@email.com\",\n  name: \"charlie\"\n}, {\n  id: 11,\n  username: \"david@email.com\",\n  email: \"david@email.com\",\n  name: \"david\"\n}, {\n  id: 12,\n  username: \"ema@email.com\",\n  email: \"ema@email.com\",\n  name: \"ema\"\n}];\nfunction CreateExpensePopup({\n  show,\n  onClose,\n  handleExpenseUpdate,\n  groupDetails\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [showAlert, setShowAlert] = useState(false);\n  const [alertMessage, setAlertMessage] = useState(\"\");\n  const [alertVariant, setAlertVariant] = useState(\"\");\n  const [updatedDescription, setUpdatedDescription] = useState(\"\");\n  const [updatedAmountPaid, setUpdatedAmountPaid] = useState(0);\n  const [userAmounts, setUserAmounts] = useState({});\n  const [isEvenlySplit, setIsEvenlySplit] = useState(false);\n  // const userData = groupDetails.members;\n\n  // const groupDetails = useSelector((state) => state.groupDetails);\n  // const {\n  //     error: groupDetailsError,\n  //     loading: groupDetailsLoading,\n  //     groupDetail,\n  // } = groupDetails;\n\n  // const groupExpenseDetailUpdate = useSelector(\n  //     (state) => state.groupExpenseDetailUpdate\n  // );\n  // const { success: groupExpenseDetailUpdateSuccess } =\n  //     groupExpenseDetailUpdate;\n\n  // Function to handle changes in user amount inputs\n  const handleUserAmountChange = (userId, amount) => {\n    setUserAmounts(prevAmounts => ({\n      ...prevAmounts,\n      [userId]: amount\n    }));\n  };\n  const evenlySplitAmount = mostRecentUpdatedAmount => {\n    const numberOfUsers = Object.keys(userAmounts).length;\n    var perUserAmount;\n    if (mostRecentUpdatedAmount === 0) {\n      perUserAmount = 0;\n    } else {\n      perUserAmount = mostRecentUpdatedAmount / numberOfUsers;\n    }\n    const evenlySplitUserAmounts = {};\n    for (const userId in userAmounts) {\n      evenlySplitUserAmounts[userId] = perUserAmount;\n    }\n    setUserAmounts(evenlySplitUserAmounts);\n  };\n  const handleIsEvenlySplitChange = e => {\n    setIsEvenlySplit(e.target.checked);\n    if (e.target.checked) {\n      evenlySplitAmount(updatedAmountPaid);\n    }\n  };\n  const handleAmountPaidChange = e => {\n    const newValue = parseFloat(e.target.value);\n    var mostRecentAmount;\n    if (!isNaN(newValue)) {\n      setUpdatedAmountPaid(newValue);\n      mostRecentAmount = newValue;\n    } else {\n      setUpdatedAmountPaid(0);\n      mostRecentAmount = 0;\n    }\n    if (isEvenlySplit) {\n      evenlySplitAmount(mostRecentAmount);\n    }\n  };\n  const handleSubmit = () => {\n    // Calculate the total amount from userAmounts\n    const totalAmount = Object.values(userAmounts).reduce((total, amount) => total + parseFloat(amount || 0), 0);\n\n    // Check if the total amount is not equal to the expense amount\n    if (parseFloat(totalAmount).toFixed(2) !== parseFloat(updatedAmountPaid).toFixed(2)) {\n      handleShowAlert(\"Expense distribution doesn't add up to expense amount\", \"danger\");\n    } else {\n      // Create an array of expense_details based on userAmounts\n      const expenseDetails = Object.keys(userAmounts).map(userId => ({\n        user: Number(userId),\n        amount_owed: parseFloat(parseFloat(userAmounts[userId]).toFixed(2))\n      }));\n\n      // Create the data object to be logged\n      const updatedData = {\n        description: updatedDescription,\n        amount: parseFloat(parseFloat(updatedAmountPaid).toFixed(2)),\n        expense_details: expenseDetails,\n        isEvenlySplit: isEvenlySplit\n      };\n\n      // dispatch(\n      //     updateGroupExpense(expense.group, expense.id, updatedData)\n      // );\n      console.log(updatedData);\n      handleClose();\n    }\n  };\n  const handleClose = () => {\n    // dispatch({ type: GROUP_EXPENSES_DETAILS_CREATE_RESET });\n    onClose();\n  };\n  const handleShowAlert = useCallback((message, variant) => {\n    setAlertMessage(message);\n    setAlertVariant(variant);\n    setShowAlert(true);\n    setTimeout(() => {\n      setShowAlert(false);\n    }, 3000);\n  }, []);\n\n  // useEffect(() => {\n  //     if (groupExpenseDetailUpdateSuccess) {\n  //         // tells ExpenseList.js to update the list\n  //         handleExpenseUpdate();\n  //         handleShowAlert(\"Successfully updated expense\", \"success\");\n  //     } else if (groupExpenseDetailUpdateSuccess === false) {\n  //         handleShowAlert(\n  //             \"Error occurred while trying to update success\",\n  //             \"danger\"\n  //         );\n  //     }\n  // }, [groupExpenseDetailUpdateSuccess, handleShowAlert, handleExpenseUpdate]);\n\n  useEffect(() => {\n    // Initialize userAmounts with initial data from userData\n    const initialUserAmounts = {};\n    userData.forEach(user => {\n      initialUserAmounts[user.id] = 0;\n    });\n    setUserAmounts(initialUserAmounts);\n  }, [userData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      show: show,\n      onHide: handleClose,\n      centered: true,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"expense-detail-popout py-3\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            className: \"left-col\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Expense Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row my-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"my-0 me-2\",\n                children: \"Amount Paid:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                type: \"number\",\n                value: updatedAmountPaid,\n                onChange: handleAmountPaidChange,\n                inputMode: \"numeric\",\n                pattern: \"[0-9]*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-column my-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"my-2\",\n                children: \"Description:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                as: \"textarea\",\n                rows: 4,\n                value: updatedDescription,\n                onChange: e => {\n                  setUpdatedDescription(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"right-col border-primary\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Expense Distribution\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `${isEvenlySplit ? \"disabled\" : \"\"}`,\n              children: userData.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `detail d-flex flex-row align-items-center my-2`,\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: user.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 45\n                  }, this), \"'s\\xA0split\\xA0is\\xA0$\", /*#__PURE__*/_jsxDEV(FormControl, {\n                    type: \"number\",\n                    value: userAmounts[user.id],\n                    onChange: e => handleUserAmountChange(user.id, e.target.value),\n                    inputMode: \"numeric\",\n                    pattern: \"[0-9]*\",\n                    disabled: isEvenlySplit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 41\n                }, this)\n              }, user.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex flex-row align-items-center my-2\",\n              children: /*#__PURE__*/_jsxDEV(Form.Check, {\n                type: \"checkbox\",\n                id: \"evenlySplitCheckbox\",\n                label: \"Evenly Split\",\n                checked: isEvenlySplit,\n                onChange: handleIsEvenlySplitChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleSubmit,\n          children: \"Save Changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleClose,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n        message: alertMessage,\n        variant: alertVariant\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }, this), showAlert && /*#__PURE__*/_jsxDEV(AlertMessage, {\n      message: alertMessage,\n      variant: alertVariant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 205,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateExpensePopup, \"39CQAgRKsEgr8yLJX6+dUQ/EUOE=\", false, function () {\n  return [useDispatch];\n});\n_c = CreateExpensePopup;\nexport default CreateExpensePopup;\nvar _c;\n$RefreshReg$(_c, \"CreateExpensePopup\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","Modal","Button","Row","Col","FormControl","Form","useDispatch","useSelector","AlertMessage","jsxDEV","_jsxDEV","userData","id","username","email","name","CreateExpensePopup","show","onClose","handleExpenseUpdate","groupDetails","_s","dispatch","showAlert","setShowAlert","alertMessage","setAlertMessage","alertVariant","setAlertVariant","updatedDescription","setUpdatedDescription","updatedAmountPaid","setUpdatedAmountPaid","userAmounts","setUserAmounts","isEvenlySplit","setIsEvenlySplit","handleUserAmountChange","userId","amount","prevAmounts","evenlySplitAmount","mostRecentUpdatedAmount","numberOfUsers","Object","keys","length","perUserAmount","evenlySplitUserAmounts","handleIsEvenlySplitChange","e","target","checked","handleAmountPaidChange","newValue","parseFloat","value","mostRecentAmount","isNaN","handleSubmit","totalAmount","values","reduce","total","toFixed","handleShowAlert","expenseDetails","map","user","Number","amount_owed","updatedData","description","expense_details","console","log","handleClose","message","variant","setTimeout","initialUserAmounts","forEach","children","onHide","centered","Body","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","inputMode","pattern","as","rows","disabled","Check","label","Footer","onClick","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/IndividualGroupScreenComponents/CreateExpensePopup.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport { Modal, Button, Row, Col, FormControl, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport \"../../styles/screens/GroupsScreens.css\";\nimport AlertMessage from \"../AlertMessage\";\n// import { createGroupExpense } from \"../../actions/groupActions\";\n// import { GROUP_EXPENSES_DETAILS_CREATE_RESET } from \"../../constants/groupConstants\";\n\nconst userData = [\n    {\n        id: 1,\n        username: \"jeus@email.com\",\n        email: \"jeus@email.com\",\n        name: \"Jeus\",\n    },\n    {\n        id: 3,\n        username: \"tim@email.com\",\n        email: \"tim@email.com\",\n        name: \"tim\",\n    },\n    {\n        id: 9,\n        username: \"bob@email.com\",\n        email: \"bob@email.com\",\n        name: \"bob\",\n    },\n    {\n        id: 10,\n        username: \"charlie@email.com\",\n        email: \"charlie@email.com\",\n        name: \"charlie\",\n    },\n    {\n        id: 11,\n        username: \"david@email.com\",\n        email: \"david@email.com\",\n        name: \"david\",\n    },\n    {\n        id: 12,\n        username: \"ema@email.com\",\n        email: \"ema@email.com\",\n        name: \"ema\",\n    },\n];\n\nfunction CreateExpensePopup({\n    show,\n    onClose,\n    handleExpenseUpdate,\n    groupDetails,\n}) {\n    const dispatch = useDispatch();\n    const [showAlert, setShowAlert] = useState(false);\n    const [alertMessage, setAlertMessage] = useState(\"\");\n    const [alertVariant, setAlertVariant] = useState(\"\");\n    const [updatedDescription, setUpdatedDescription] = useState(\"\");\n    const [updatedAmountPaid, setUpdatedAmountPaid] = useState(0);\n    const [userAmounts, setUserAmounts] = useState({});\n    const [isEvenlySplit, setIsEvenlySplit] = useState(false);\n    // const userData = groupDetails.members;\n\n    // const groupDetails = useSelector((state) => state.groupDetails);\n    // const {\n    //     error: groupDetailsError,\n    //     loading: groupDetailsLoading,\n    //     groupDetail,\n    // } = groupDetails;\n\n    // const groupExpenseDetailUpdate = useSelector(\n    //     (state) => state.groupExpenseDetailUpdate\n    // );\n    // const { success: groupExpenseDetailUpdateSuccess } =\n    //     groupExpenseDetailUpdate;\n\n    // Function to handle changes in user amount inputs\n    const handleUserAmountChange = (userId, amount) => {\n        setUserAmounts((prevAmounts) => ({\n            ...prevAmounts,\n            [userId]: amount,\n        }));\n    };\n\n    const evenlySplitAmount = (mostRecentUpdatedAmount) => {\n        const numberOfUsers = Object.keys(userAmounts).length;\n        var perUserAmount;\n        if (mostRecentUpdatedAmount === 0) {\n            perUserAmount = 0;\n        } else {\n            perUserAmount = mostRecentUpdatedAmount / numberOfUsers;\n        }\n\n        const evenlySplitUserAmounts = {};\n\n        for (const userId in userAmounts) {\n            evenlySplitUserAmounts[userId] = perUserAmount;\n        }\n\n        setUserAmounts(evenlySplitUserAmounts);\n    };\n\n    const handleIsEvenlySplitChange = (e) => {\n        setIsEvenlySplit(e.target.checked);\n        if (e.target.checked) {\n            evenlySplitAmount(updatedAmountPaid);\n        }\n    };\n\n    const handleAmountPaidChange = (e) => {\n        const newValue = parseFloat(e.target.value);\n        var mostRecentAmount;\n        if (!isNaN(newValue)) {\n            setUpdatedAmountPaid(newValue);\n            mostRecentAmount = newValue;\n        } else {\n            setUpdatedAmountPaid(0);\n            mostRecentAmount = 0;\n        }\n\n        if (isEvenlySplit) {\n            evenlySplitAmount(mostRecentAmount);\n        }\n    };\n\n    const handleSubmit = () => {\n        // Calculate the total amount from userAmounts\n        const totalAmount = Object.values(userAmounts).reduce(\n            (total, amount) => total + parseFloat(amount || 0),\n            0\n        );\n\n        // Check if the total amount is not equal to the expense amount\n        if (\n            parseFloat(totalAmount).toFixed(2) !==\n            parseFloat(updatedAmountPaid).toFixed(2)\n        ) {\n            handleShowAlert(\n                \"Expense distribution doesn't add up to expense amount\",\n                \"danger\"\n            );\n        } else {\n            // Create an array of expense_details based on userAmounts\n            const expenseDetails = Object.keys(userAmounts).map((userId) => ({\n                user: Number(userId),\n                amount_owed: parseFloat(\n                    parseFloat(userAmounts[userId]).toFixed(2)\n                ),\n            }));\n\n            // Create the data object to be logged\n            const updatedData = {\n                description: updatedDescription,\n                amount: parseFloat(parseFloat(updatedAmountPaid).toFixed(2)),\n                expense_details: expenseDetails,\n                isEvenlySplit: isEvenlySplit,\n            };\n\n            // dispatch(\n            //     updateGroupExpense(expense.group, expense.id, updatedData)\n            // );\n            console.log(updatedData);\n            handleClose();\n        }\n    };\n\n    const handleClose = () => {\n        // dispatch({ type: GROUP_EXPENSES_DETAILS_CREATE_RESET });\n        onClose();\n    };\n\n    const handleShowAlert = useCallback((message, variant) => {\n        setAlertMessage(message);\n        setAlertVariant(variant);\n        setShowAlert(true);\n        setTimeout(() => {\n            setShowAlert(false);\n        }, 3000);\n    }, []);\n\n    // useEffect(() => {\n    //     if (groupExpenseDetailUpdateSuccess) {\n    //         // tells ExpenseList.js to update the list\n    //         handleExpenseUpdate();\n    //         handleShowAlert(\"Successfully updated expense\", \"success\");\n    //     } else if (groupExpenseDetailUpdateSuccess === false) {\n    //         handleShowAlert(\n    //             \"Error occurred while trying to update success\",\n    //             \"danger\"\n    //         );\n    //     }\n    // }, [groupExpenseDetailUpdateSuccess, handleShowAlert, handleExpenseUpdate]);\n\n    useEffect(() => {\n        // Initialize userAmounts with initial data from userData\n        const initialUserAmounts = {};\n        userData.forEach((user) => {\n            initialUserAmounts[user.id] = 0;\n        });\n        setUserAmounts(initialUserAmounts);\n    }, [userData]);\n\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose} centered>\n                <Modal.Body>\n                    <Row className=\"expense-detail-popout py-3\">\n                        <Col className=\"left-col\">\n                            <h5>Expense Details</h5>\n                            <div className=\"d-flex flex-row my-2\">\n                                <h6 className=\"my-0 me-2\">Amount Paid:</h6>\n                                <FormControl\n                                    type=\"number\"\n                                    value={updatedAmountPaid}\n                                    onChange={handleAmountPaidChange}\n                                    inputMode=\"numeric\"\n                                    pattern=\"[0-9]*\"\n                                />\n                            </div>\n                            <div className=\"d-flex flex-column my-2\">\n                                <h6 className=\"my-2\">Description:</h6>\n                                <FormControl\n                                    as=\"textarea\"\n                                    rows={4}\n                                    value={updatedDescription}\n                                    onChange={(e) => {\n                                        setUpdatedDescription(e.target.value);\n                                    }}\n                                />\n                            </div>\n                        </Col>\n                        <Col className=\"right-col border-primary\">\n                            <h5>Expense Distribution</h5>\n                            <div\n                                className={`${isEvenlySplit ? \"disabled\" : \"\"}`}\n                            >\n                                {userData.map((user) => (\n                                    <div key={user.id}>\n                                        <div\n                                            className={`detail d-flex flex-row align-items-center my-2`}\n                                        >\n                                            <strong>{user.name}</strong>\n                                            's&nbsp;split&nbsp;is&nbsp;$\n                                            <FormControl\n                                                type=\"number\"\n                                                value={userAmounts[user.id]}\n                                                onChange={(e) =>\n                                                    handleUserAmountChange(\n                                                        user.id,\n                                                        e.target.value\n                                                    )\n                                                }\n                                                inputMode=\"numeric\"\n                                                pattern=\"[0-9]*\"\n                                                disabled={isEvenlySplit}\n                                            />\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"d-flex flex-row align-items-center my-2\">\n                                <Form.Check\n                                    type=\"checkbox\"\n                                    id=\"evenlySplitCheckbox\"\n                                    label=\"Evenly Split\"\n                                    checked={isEvenlySplit}\n                                    onChange={handleIsEvenlySplitChange}\n                                />\n                            </div>\n                        </Col>\n                    </Row>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={handleSubmit}>\n                        Save Changes\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n                {showAlert && (\n                    <AlertMessage\n                        message={alertMessage}\n                        variant={alertVariant}\n                    />\n                )}\n            </Modal>\n            {showAlert && (\n                <AlertMessage message={alertMessage} variant={alertVariant} />\n            )}\n        </div>\n    );\n}\n\nexport default CreateExpensePopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}