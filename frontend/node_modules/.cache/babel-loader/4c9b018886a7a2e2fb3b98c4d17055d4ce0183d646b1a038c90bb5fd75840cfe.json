{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/DashboardScreenComponents/TotalSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"../../styles/screens/DashboardScreen.css\";\nimport Message from \"../Message\";\n\n/**\n * Data dispatch from DashboardScreenComponents/FriendsSummary.js\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TotalSummary() {\n  _s();\n  const collapseSize = 4;\n  const [userDebtTotal, setUserDebtTotal] = useState(0);\n  const [userCreditTotal, setUserCreditTotal] = useState(0);\n  const [showAll, setShowAll] = useState(false);\n  const usersGroupsTotalDebtCredit = useSelector(state => state.usersGroupsTotalDebtCredit);\n  const {\n    error: userGroupsTotalCreditDebitError,\n    loading: userGroupsTotalCreditDebitLoading,\n    userGroupsTotalCreditDebit\n  } = usersGroupsTotalDebtCredit;\n  console.log(userGroupsTotalCreditDebit);\n\n  // useEffect(() => {\n  //     if (userDebt || userCredit) {\n  //         const updatedUserDebtList = [];\n  //         const updatedUserCreditList = [];\n\n  //         for (const groupId in userGroupsTotalCreditDebit) {\n  //             const groupData = userGroupsTotalCreditDebit[groupId];\n  //             const { group_name, total_credit, total_debt } = groupData;\n  //             // Create unique keys based on groupId and data type\n  //             const creditKey = `${groupId}_credit`;\n  //             const debtKey = `${groupId}_debt`;\n\n  //             // Check if total_credit exists and add it to the list\n  //             if (total_credit !== null) {\n  //                 updatedUserCreditList.push({\n  //                     groupId: groupId,\n  //                     groupName: group_name,\n  //                     totalCredit: total_credit,\n  //                     key: creditKey,\n  //                 });\n  //             }\n\n  //             // Check if total_debt exists and add it to the list\n  //             if (total_debt !== null) {\n  //                 updatedUserDebtList.push({\n  //                     groupId: groupId,\n  //                     groupName: group_name,\n  //                     totalDebt: total_debt,\n  //                     key: debtKey,\n  //                 });\n  //             }\n  //         }\n\n  //         // Update the state with the new arrays\n  //         setUserCreditList(updatedUserCreditList);\n  //         setUserDebtList(updatedUserDebtList);\n  //     }\n  // }, [userGroupsTotalCreditDebit]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"TotalSummary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(TotalSummary, \"vfaZwdBU94p0vOkWOvCq3RsRPIA=\", false, function () {\n  return [useSelector];\n});\n_c = TotalSummary;\nexport default TotalSummary;\nvar _c;\n$RefreshReg$(_c, \"TotalSummary\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Row","Col","Message","jsxDEV","_jsxDEV","TotalSummary","_s","collapseSize","userDebtTotal","setUserDebtTotal","userCreditTotal","setUserCreditTotal","showAll","setShowAll","usersGroupsTotalDebtCredit","state","error","userGroupsTotalCreditDebitError","loading","userGroupsTotalCreditDebitLoading","userGroupsTotalCreditDebit","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/DashboardScreenComponents/TotalSummary.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport \"../../styles/screens/DashboardScreen.css\";\nimport Message from \"../Message\";\n\n/**\n * Data dispatch from DashboardScreenComponents/FriendsSummary.js\n */\nfunction TotalSummary() {\n    const collapseSize = 4;\n    const [userDebtTotal, setUserDebtTotal] = useState(0);\n    const [userCreditTotal, setUserCreditTotal] = useState(0);\n    const [showAll, setShowAll] = useState(false);\n\n    const usersGroupsTotalDebtCredit = useSelector(\n        (state) => state.usersGroupsTotalDebtCredit\n    );\n    const {\n        error: userGroupsTotalCreditDebitError,\n        loading: userGroupsTotalCreditDebitLoading,\n        userGroupsTotalCreditDebit,\n    } = usersGroupsTotalDebtCredit;\n\n    console.log(userGroupsTotalCreditDebit);\n\n    // useEffect(() => {\n    //     if (userDebt || userCredit) {\n    //         const updatedUserDebtList = [];\n    //         const updatedUserCreditList = [];\n\n    //         for (const groupId in userGroupsTotalCreditDebit) {\n    //             const groupData = userGroupsTotalCreditDebit[groupId];\n    //             const { group_name, total_credit, total_debt } = groupData;\n    //             // Create unique keys based on groupId and data type\n    //             const creditKey = `${groupId}_credit`;\n    //             const debtKey = `${groupId}_debt`;\n\n    //             // Check if total_credit exists and add it to the list\n    //             if (total_credit !== null) {\n    //                 updatedUserCreditList.push({\n    //                     groupId: groupId,\n    //                     groupName: group_name,\n    //                     totalCredit: total_credit,\n    //                     key: creditKey,\n    //                 });\n    //             }\n\n    //             // Check if total_debt exists and add it to the list\n    //             if (total_debt !== null) {\n    //                 updatedUserDebtList.push({\n    //                     groupId: groupId,\n    //                     groupName: group_name,\n    //                     totalDebt: total_debt,\n    //                     key: debtKey,\n    //                 });\n    //             }\n    //         }\n\n    //         // Update the state with the new arrays\n    //         setUserCreditList(updatedUserCreditList);\n    //         setUserDebtList(updatedUserDebtList);\n    //     }\n    // }, [userGroupsTotalCreditDebit]);\n\n    return (\n        <div>\n            <div>TotalSummary</div>\n        </div>\n    );\n}\n\nexport default TotalSummary;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAE1C,OAAO,0CAA0C;AACjD,OAAOC,OAAO,MAAM,YAAY;;AAEhC;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkB,0BAA0B,GAAGf,WAAW,CACzCgB,KAAK,IAAKA,KAAK,CAACD,0BACrB,CAAC;EACD,MAAM;IACFE,KAAK,EAAEC,+BAA+B;IACtCC,OAAO,EAAEC,iCAAiC;IAC1CC;EACJ,CAAC,GAAGN,0BAA0B;EAE9BO,OAAO,CAACC,GAAG,CAACF,0BAA0B,CAAC;;EAEvC;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA,oBACIhB,OAAA;IAAAmB,QAAA,eACInB,OAAA;MAAAmB,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACrB,EAAA,CA7DQD,YAAY;EAAA,QAMkBN,WAAW;AAAA;AAAA6B,EAAA,GANzCvB,YAAY;AA+DrB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}