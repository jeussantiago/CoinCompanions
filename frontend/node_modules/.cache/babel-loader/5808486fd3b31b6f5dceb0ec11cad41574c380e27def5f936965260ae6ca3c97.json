{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/DashboardScreenComponents/TotalSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\nimport \"../../styles/screens/DashboardScreen.css\";\nimport Message from \"../Message\";\n\n/**\n * Data dispatch from DashboardScreenComponents/FriendsSummary.js\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TotalSummary() {\n  _s();\n  const collapseSize = 4;\n  const [userDebtTotal, setUserDebtTotal] = useState(0);\n  const [userCreditTotal, setUserCreditTotal] = useState(0);\n  const [showAll, setShowAll] = useState(false);\n  const usersGroupsTotalDebtCredit = useSelector(state => state.usersGroupsTotalDebtCredit);\n  const {\n    error: userGroupsTotalCreditDebitError,\n    loading: userGroupsTotalCreditDebitLoading,\n    userGroupsTotalCreditDebit\n  } = usersGroupsTotalDebtCredit;\n  console.log(userGroupsTotalCreditDebit);\n  console.log(\"debt total:\", userDebtTotal);\n  console.log(\"credit total:\", userCreditTotal);\n  useEffect(() => {\n    if (userGroupsTotalCreditDebit) {\n      var updatedUserDebtTotal = 0;\n      var updatedUserCreditTotal = 0;\n      for (const groupId in userGroupsTotalCreditDebit) {\n        const groupData = userGroupsTotalCreditDebit[groupId];\n        const {\n          total_credit,\n          total_debt\n        } = groupData;\n\n        // Check if total_credit exists and add it to the list\n        if (total_credit !== null) {\n          updatedUserCreditTotal += total_credit;\n\n          // updatedUserCreditList.push({\n          //     groupId: groupId,\n          //     groupName: group_name,\n          //     totalCredit: total_credit,\n          //     key: creditKey,\n          // });\n        }\n\n        // Check if total_debt exists and add it to the list\n        if (total_debt !== null) {\n          updatedUserDebtTotal += total_debt;\n          // updatedUserDebtList.push({\n          //     groupId: groupId,\n          //     groupName: group_name,\n          //     totalDebt: total_debt,\n          //     key: debtKey,\n          // });\n        }\n      }\n\n      // Update the state with the new arrays\n      setUserCreditTotal(updatedUserCreditTotal);\n      setUserDebtTotal(updatedUserDebtTotal);\n    }\n  }, [userGroupsTotalCreditDebit]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"TotalSummary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n_s(TotalSummary, \"PwVFagMyDhdqmua2TkTyPworIQI=\", false, function () {\n  return [useSelector];\n});\n_c = TotalSummary;\nexport default TotalSummary;\nvar _c;\n$RefreshReg$(_c, \"TotalSummary\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","Row","Col","Message","jsxDEV","_jsxDEV","TotalSummary","_s","collapseSize","userDebtTotal","setUserDebtTotal","userCreditTotal","setUserCreditTotal","showAll","setShowAll","usersGroupsTotalDebtCredit","state","error","userGroupsTotalCreditDebitError","loading","userGroupsTotalCreditDebitLoading","userGroupsTotalCreditDebit","console","log","updatedUserDebtTotal","updatedUserCreditTotal","groupId","groupData","total_credit","total_debt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/DashboardScreenComponents/TotalSummary.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Row, Col } from \"react-bootstrap\";\n\nimport \"../../styles/screens/DashboardScreen.css\";\nimport Message from \"../Message\";\n\n/**\n * Data dispatch from DashboardScreenComponents/FriendsSummary.js\n */\nfunction TotalSummary() {\n    const collapseSize = 4;\n    const [userDebtTotal, setUserDebtTotal] = useState(0);\n    const [userCreditTotal, setUserCreditTotal] = useState(0);\n    const [showAll, setShowAll] = useState(false);\n\n    const usersGroupsTotalDebtCredit = useSelector(\n        (state) => state.usersGroupsTotalDebtCredit\n    );\n    const {\n        error: userGroupsTotalCreditDebitError,\n        loading: userGroupsTotalCreditDebitLoading,\n        userGroupsTotalCreditDebit,\n    } = usersGroupsTotalDebtCredit;\n\n    console.log(userGroupsTotalCreditDebit);\n    console.log(\"debt total:\", userDebtTotal);\n    console.log(\"credit total:\", userCreditTotal);\n\n    useEffect(() => {\n        if (userGroupsTotalCreditDebit) {\n            var updatedUserDebtTotal = 0;\n            var updatedUserCreditTotal = 0;\n\n            for (const groupId in userGroupsTotalCreditDebit) {\n                const groupData = userGroupsTotalCreditDebit[groupId];\n                const { total_credit, total_debt } = groupData;\n\n                // Check if total_credit exists and add it to the list\n                if (total_credit !== null) {\n                    updatedUserCreditTotal += total_credit;\n\n                    // updatedUserCreditList.push({\n                    //     groupId: groupId,\n                    //     groupName: group_name,\n                    //     totalCredit: total_credit,\n                    //     key: creditKey,\n                    // });\n                }\n\n                // Check if total_debt exists and add it to the list\n                if (total_debt !== null) {\n                    updatedUserDebtTotal += total_debt;\n                    // updatedUserDebtList.push({\n                    //     groupId: groupId,\n                    //     groupName: group_name,\n                    //     totalDebt: total_debt,\n                    //     key: debtKey,\n                    // });\n                }\n            }\n\n            // Update the state with the new arrays\n            setUserCreditTotal(updatedUserCreditTotal);\n            setUserDebtTotal(updatedUserDebtTotal);\n        }\n    }, [userGroupsTotalCreditDebit]);\n\n    return (\n        <div>\n            <div>TotalSummary</div>\n        </div>\n    );\n}\n\nexport default TotalSummary;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AAE1C,OAAO,0CAA0C;AACjD,OAAOC,OAAO,MAAM,YAAY;;AAEhC;AACA;AACA;AAFA,SAAAC,MAAA,IAAAC,OAAA;AAGA,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,YAAY,GAAG,CAAC;EACtB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACzD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMkB,0BAA0B,GAAGf,WAAW,CACzCgB,KAAK,IAAKA,KAAK,CAACD,0BACrB,CAAC;EACD,MAAM;IACFE,KAAK,EAAEC,+BAA+B;IACtCC,OAAO,EAAEC,iCAAiC;IAC1CC;EACJ,CAAC,GAAGN,0BAA0B;EAE9BO,OAAO,CAACC,GAAG,CAACF,0BAA0B,CAAC;EACvCC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEd,aAAa,CAAC;EACzCa,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEZ,eAAe,CAAC;EAE7Cb,SAAS,CAAC,MAAM;IACZ,IAAIuB,0BAA0B,EAAE;MAC5B,IAAIG,oBAAoB,GAAG,CAAC;MAC5B,IAAIC,sBAAsB,GAAG,CAAC;MAE9B,KAAK,MAAMC,OAAO,IAAIL,0BAA0B,EAAE;QAC9C,MAAMM,SAAS,GAAGN,0BAA0B,CAACK,OAAO,CAAC;QACrD,MAAM;UAAEE,YAAY;UAAEC;QAAW,CAAC,GAAGF,SAAS;;QAE9C;QACA,IAAIC,YAAY,KAAK,IAAI,EAAE;UACvBH,sBAAsB,IAAIG,YAAY;;UAEtC;UACA;UACA;UACA;UACA;UACA;QACJ;;QAEA;QACA,IAAIC,UAAU,KAAK,IAAI,EAAE;UACrBL,oBAAoB,IAAIK,UAAU;UAClC;UACA;UACA;UACA;UACA;UACA;QACJ;MACJ;;MAEA;MACAjB,kBAAkB,CAACa,sBAAsB,CAAC;MAC1Cf,gBAAgB,CAACc,oBAAoB,CAAC;IAC1C;EACJ,CAAC,EAAE,CAACH,0BAA0B,CAAC,CAAC;EAEhC,oBACIhB,OAAA;IAAAyB,QAAA,eACIzB,OAAA;MAAAyB,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAAC3B,EAAA,CA/DQD,YAAY;EAAA,QAMkBN,WAAW;AAAA;AAAAmC,EAAA,GANzC7B,YAAY;AAiErB,eAAeA,YAAY;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}