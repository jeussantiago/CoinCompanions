{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/HomeScreenComponents/GoogleLoginButton.js\",\n  _s = $RefreshSig$();\n// GoogleLoginButton.js\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import { googleLogin } from \"../../actions/userActions\";\nimport { Button } from \"react-bootstrap\";\n// dispatch(googleLogin(response.profileObj.tokenId))\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\nfunction GoogleLoginButton() {\n  _s();\n  // Your Google API Client ID\n\n  // Initialize gapi.auth2 with your client ID\n  // useEffect(() => {\n  //     window.gapi.load(\"auth2\", () => {\n  //         window.gapi.auth2.init({\n  //             client_id: CLIENT_ID,\n  //         });\n  //     });\n  // }, []);\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      console.log(\"no user\");\n      // window.gapi.load(\"auth2\", () => {\n      //     window.gapi.auth2.init({\n      //         client_id: CLIENT_ID,\n      //     });\n      // });\n    }\n  }, [userInfo]);\n\n  // window.gapi.load(\"auth2\", () => {\n  //     window.gapi.auth2.init({\n  //         client_id: CLIENT_ID,\n  //     });\n  // });\n\n  const handleGoogleLogin = () => {\n    // console.log(\"first\");\n    // // Initialize gapi.auth2 with app client ID\n    // window.gapi.load(\"auth2\", () => {\n    //     window.gapi.auth2.init({\n    //         client_id: CLIENT_ID,\n    //     });\n    // });\n\n    console.log(\"hello\");\n    const auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signIn().then(googleUser => {\n      const idToken = googleUser.getAuthResponse().id_token;\n      console.log(\"user idToken: \", idToken);\n      // Send the `idToken` to your server for verification\n      // Your server should verify the token with Google and log in or create a user as needed\n      // You can use a library like `google-auth-library` on your server for this purpose\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"dark\",\n      onClick: handleGoogleLogin,\n      className: \"w-100 rounded-pill mt-2 fw-bold\",\n      children: \"Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n_s(GoogleLoginButton, \"UJvyyOkZFh8LAtWuhSU8bjYMa68=\", false, function () {\n  return [useSelector];\n});\n_c = GoogleLoginButton;\nexport default GoogleLoginButton;\nvar _c;\n$RefreshReg$(_c, \"GoogleLoginButton\");","map":{"version":3,"names":["React","useEffect","useSelector","Button","jsxDEV","_jsxDEV","CLIENT_ID","process","env","REACT_APP_CLIENT_ID","GoogleLoginButton","_s","userLogin","state","userInfo","console","log","handleGoogleLogin","auth2","window","gapi","getAuthInstance","signIn","then","googleUser","idToken","getAuthResponse","id_token","children","type","variant","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/HomeScreenComponents/GoogleLoginButton.js"],"sourcesContent":["// GoogleLoginButton.js\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n// import { googleLogin } from \"../../actions/userActions\";\nimport { Button } from \"react-bootstrap\";\n// dispatch(googleLogin(response.profileObj.tokenId))\n\nconst CLIENT_ID = process.env.REACT_APP_CLIENT_ID;\n\nfunction GoogleLoginButton() {\n    // Your Google API Client ID\n\n    // Initialize gapi.auth2 with your client ID\n    // useEffect(() => {\n    //     window.gapi.load(\"auth2\", () => {\n    //         window.gapi.auth2.init({\n    //             client_id: CLIENT_ID,\n    //         });\n    //     });\n    // }, []);\n    const userLogin = useSelector((state) => state.userLogin);\n    const { userInfo } = userLogin;\n\n    useEffect(() => {\n        if (!userInfo) {\n            console.log(\"no user\");\n            // window.gapi.load(\"auth2\", () => {\n            //     window.gapi.auth2.init({\n            //         client_id: CLIENT_ID,\n            //     });\n            // });\n        }\n    }, [userInfo]);\n\n    // window.gapi.load(\"auth2\", () => {\n    //     window.gapi.auth2.init({\n    //         client_id: CLIENT_ID,\n    //     });\n    // });\n\n    const handleGoogleLogin = () => {\n        // console.log(\"first\");\n        // // Initialize gapi.auth2 with app client ID\n        // window.gapi.load(\"auth2\", () => {\n        //     window.gapi.auth2.init({\n        //         client_id: CLIENT_ID,\n        //     });\n        // });\n\n        console.log(\"hello\");\n        const auth2 = window.gapi.auth2.getAuthInstance();\n\n        auth2.signIn().then((googleUser) => {\n            const idToken = googleUser.getAuthResponse().id_token;\n            console.log(\"user idToken: \", idToken);\n            // Send the `idToken` to your server for verification\n            // Your server should verify the token with Google and log in or create a user as needed\n            // You can use a library like `google-auth-library` on your server for this purpose\n        });\n    };\n\n    return (\n        <div>\n            <Button\n                type=\"submit\"\n                variant=\"dark\"\n                onClick={handleGoogleLogin}\n                className=\"w-100 rounded-pill mt-2 fw-bold\"\n            >\n                Google\n            </Button>\n        </div>\n    );\n}\n\nexport default GoogleLoginButton;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,aAAa;AACzC;AACA,SAASC,MAAM,QAAQ,iBAAiB;AACxC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB;AAEjD,SAASC,iBAAiBA,CAAA,EAAG;EAAAC,EAAA;EACzB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,SAAS,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACD,SAAS,CAAC;EACzD,MAAM;IAAEE;EAAS,CAAC,GAAGF,SAAS;EAE9BX,SAAS,CAAC,MAAM;IACZ,IAAI,CAACa,QAAQ,EAAE;MACXC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtB;MACA;MACA;MACA;MACA;IACJ;EACJ,CAAC,EAAE,CAACF,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA;EACA;;EAEA,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC5B;IACA;IACA;IACA;IACA;IACA;IACA;;IAEAF,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAME,KAAK,GAAGC,MAAM,CAACC,IAAI,CAACF,KAAK,CAACG,eAAe,CAAC,CAAC;IAEjDH,KAAK,CAACI,MAAM,CAAC,CAAC,CAACC,IAAI,CAAEC,UAAU,IAAK;MAChC,MAAMC,OAAO,GAAGD,UAAU,CAACE,eAAe,CAAC,CAAC,CAACC,QAAQ;MACrDZ,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAES,OAAO,CAAC;MACtC;MACA;MACA;IACJ,CAAC,CAAC;EACN,CAAC;;EAED,oBACIpB,OAAA;IAAAuB,QAAA,eACIvB,OAAA,CAACF,MAAM;MACH0B,IAAI,EAAC,QAAQ;MACbC,OAAO,EAAC,MAAM;MACdC,OAAO,EAAEd,iBAAkB;MAC3Be,SAAS,EAAC,iCAAiC;MAAAJ,QAAA,EAC9C;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd;AAACzB,EAAA,CAhEQD,iBAAiB;EAAA,QAWJR,WAAW;AAAA;AAAAmC,EAAA,GAXxB3B,iBAAiB;AAkE1B,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}