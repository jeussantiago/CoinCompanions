{"ast":null,"code":"var _jsxFileName = \"/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/SearchFriendPopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Modal, Button, FormControl, ListGroup } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchFriendPopup({\n  show,\n  onClose\n}) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const handleSearchChange = event => {\n    const newSearchTerm = event.target.value;\n    setSearchTerm(newSearchTerm);\n\n    // Simulate API call to get search results based on the new search term\n    // Replace this with your actual API call\n    const results = simulateSearchResults(newSearchTerm);\n    setSearchResults(results);\n  };\n  const [searchResults, setSearchResults] = useState([]);\n  // Simulate search results for demonstration purposes\n  const simulateSearchResults = term => {\n    // Replace this with actual API call to get search results\n    // For now, return a dummy list of results\n    return [{\n      id: 1,\n      name: \"User 1\"\n    }, {\n      id: 2,\n      name: \"User 2\"\n    }\n    // ... more search results\n    ];\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    show: show,\n    onHide: onClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Search Friends\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        type: \"text\",\n        placeholder: \"Search...\",\n        value: searchTerm,\n        onChange: handleSearchChange,\n        className: \"mb-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: searchResults.map(result => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: result.name\n        }, result.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(SearchFriendPopup, \"8K28tzN6aqWupSuTIMzTiRsrFxY=\");\n_c = SearchFriendPopup;\nexport default SearchFriendPopup;\nvar _c;\n$RefreshReg$(_c, \"SearchFriendPopup\");","map":{"version":3,"names":["React","useState","Modal","Button","FormControl","ListGroup","jsxDEV","_jsxDEV","SearchFriendPopup","show","onClose","_s","searchTerm","setSearchTerm","handleSearchChange","event","newSearchTerm","target","value","results","simulateSearchResults","setSearchResults","searchResults","term","id","name","onHide","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","type","placeholder","onChange","className","map","result","Item","Footer","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/jeussantiago/Documents/coding/django/CoinCompanions/frontend/src/components/SearchFriendPopup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Button, FormControl, ListGroup } from \"react-bootstrap\";\n\nfunction SearchFriendPopup({ show, onClose }) {\n    const [searchTerm, setSearchTerm] = useState(\"\");\n\n    const handleSearchChange = (event) => {\n        const newSearchTerm = event.target.value;\n        setSearchTerm(newSearchTerm);\n\n        // Simulate API call to get search results based on the new search term\n        // Replace this with your actual API call\n        const results = simulateSearchResults(newSearchTerm);\n        setSearchResults(results);\n    };\n\n    const [searchResults, setSearchResults] = useState([]);\n    // Simulate search results for demonstration purposes\n    const simulateSearchResults = (term) => {\n        // Replace this with actual API call to get search results\n        // For now, return a dummy list of results\n        return [\n            { id: 1, name: \"User 1\" },\n            { id: 2, name: \"User 2\" },\n            // ... more search results\n        ];\n    };\n\n    return (\n        <Modal show={show} onHide={onClose}>\n            <Modal.Header closeButton>\n                <Modal.Title>Search Friends</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <FormControl\n                    type=\"text\"\n                    placeholder=\"Search...\"\n                    value={searchTerm}\n                    onChange={handleSearchChange}\n                    className=\"mb-1\"\n                />\n                <ListGroup>\n                    {searchResults.map((result) => (\n                        <ListGroup.Item key={result.id}>\n                            {result.name}\n                        </ListGroup.Item>\n                    ))}\n                </ListGroup>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={onClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}\n\nexport default SearchFriendPopup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}